---
# 1. Failure conditions
# -----------------------------------------------------------------------------
- name: "fyre : Fail if required properties are not provided"
  assert:
    that:
      - fyre_quota_type is defined and fyre_quota_type != ""
      - fyre_quota_type is in ['quick_burn', 'product_group']
      - fyre_product_id is defined and fyre_product_id != ""
      - fyre_username is defined and fyre_username != ""
      - fyre_password is defined and fyre_password != ""
      - fyre_site is defined and fyre_site != ""
      - fyre_site is in ['svl','rtp']

- name: "fyre : Fail if required properties are not provided (quickburn)"
  when: fyre_quota_type == "quick_burn"
  assert:
    that: fyre_cluster_size is defined and fyre_cluster_size != ""


# 2. Debug Info
# -----------------------------------------------------------------------------
- name: "fyre : Debug information"
  debug:
    msg:
      - "Cluster name ................. {{ cluster_name }}"
      - "Cluster type ................. {{ cluster_type }}"
      - "Cluster platform ............. {{ cluster_platform }}"
      - "Cluster description .......... {{ fyre_cluster_description }}"
      - "OCP version .................. {{ ocp_version }}"
      - "Username ..................... {{ fyre_username }}"
      - "Fyre Site .................... {{ fyre_site }}"
      - "Fyre product ID .............. {{ fyre_product_id }}"
      - "Fyre Quota Type .............. {{ fyre_quota_type }}"
      - "fips enabled ................. {{ ocp_fips_enabled }}"
      - "IPv6 enabled ..................{{ enable_ipv6 }}"
      - "Fyre Site......................{{ fyre_site }}"
      # Quickburn specific
      - "Fyre cluster size ............ {{ fyre_cluster_size | default('<undefined>', true) }}"
      # Product Group specific
      - "Worker count ................. {{ fyre_worker_count | default('<undefined>', true) }}"
      - "Worker CPU ................... {{ fyre_worker_cpu | default('<undefined>', true) }}"
      - "Worker memory ................ {{ fyre_worker_memory | default('<undefined>', true) }}"
      - "Worker additional disks ...... {{ fyre_worker_additional_disks | default('<undefined>', true) }}"


# 3. Determine whether there is already an environment running
# -----------------------------------------------------------------------------
- name: "fyre : Check if cluster already exists"
  ansible.builtin.command:
    cmd: "{{ role_path }}/scripts/fyre/check-hostname.py --site {{ fyre_site }} --name {{ cluster_name }}"
  environment:
    FYRE_USERNAME: "{{ fyre_username }}"
    FYRE_APIKEY: "{{ fyre_password }}"


# 4. Deploy the OCP+ cluster
# -----------------------------------------------------------------------------
- name: "fyre : Debug cluster provision json body"
  when:
    - _cluster_exist.json is defined
    - _cluster_exist.json.owning_user is not defined # when there's no cluster owner, it means there's no cluster thus we create it
  vars:
    fyre_template_name: "templates/fyre/{{ fyre_quota_type }}.json.j2"
  debug:
    msg: "{{ lookup('template', fyre_template_name) }}"

# Note: FYRE rate limits this API globally - we are competing with all other FYRE users for limited "slots" to
# provision new OCP+ clusters, when this happens we will see an error like this with a RC of 429:
#
# > overall (across all product groups and users) rate limit (3 in 5 minutes) exceeded
#
# To mitigate this we have a retry in place, but it will also trigger retries due to any other failure condition
# We will retry for approximately half an hour before giving up.
- name: "fyre : Create new OCP+ cluster"
  when:
    - _cluster_exist.json is defined
    - _cluster_exist.json.owning_user is not defined  # When there's no cluster owner, it means there's no cluster thus we create it
  vars:
    fyre_template_name: "templates/fyre/{{ fyre_quota_type }}.json.j2"
  uri:
    url: https://ocpapi.svl.ibm.com/v1/ocp/
    user: "{{ fyre_username }}"
    password: "{{ fyre_password }}"
    method: POST
    body: "{{ lookup('template', fyre_template_name) }}"
    force_basic_auth: yes
    body_format: json
    validate_certs: false
  register: _cluster_create
  delay: 60  # Every 1 minute
  retries: 30

- name: "fyre : Debug cluster provision"
  debug:
    var: _cluster_create


# 5. Track the progress of the deployment
# -----------------------------------------------------------------------------
- name: "fyre : Follow deployment status (2 minute intervals)"
  ansible.builtin.command:
    cmd: "{{ role_path }}/scripts/fyre/watch-provision.py --site {{ fyre_site }} --name {{ cluster_name }}"
  environment:
    FYRE_USERNAME: "{{ fyre_username }}"
    FYRE_APIKEY: "{{ fyre_password }}"


# 6. Reconfigure the cluster for NFS
# -----------------------------------------------------------------------------
- name: "Install NFS"
  include_tasks: "tasks/providers/fyre/nfs/install_nfs.yml"
  when: fyre_nfs_setup
