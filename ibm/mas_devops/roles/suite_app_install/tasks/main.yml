---

# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------
- name: "Fail if required properties are not provided"
  assert:
    that:
      - mas_instance_id is defined and mas_instance_id != ""
      - mas_app_id is defined and mas_app_id != ""
    fail_msg: "One or more required properties are not set"


# 2. Load var files
# -----------------------------------------------------------------------------
- name: Load variables
  include_vars: "vars/{{ mas_app_id }}.yml"

# 2.1  Run Application Specific Tasks
- name: Run application specific tasks
  when:
    - mas_app_id is in ['iot', 'visualinspection', 'manage']  # applications which have something to process before installing the operator
  include_tasks: "tasks/{{ mas_app_id }}.yml"

# 2.2 Load default application spec, if none is provided by user
- name: Load default application spec
  when: mas_app_spec is not defined or mas_app_spec == ""
  include_vars: "vars/defaultspecs/{{ mas_app_id }}.yml"


# 3. Provide debug information
# -----------------------------------------------------------------------------
- name: "Configure namespace"
  set_fact:
    mas_app_namespace: "mas-{{ mas_instance_id }}-{{ mas_app_id }}"

- name: "Debug information"
  debug:
    msg:
      - "Instance ID ................ {{ mas_instance_id }}"
      - "Application ID ............. {{ mas_app_id }}"
      - "MAS app namespace .......... {{ mas_app_namespace }}"
      - "App catalog source ......... {{ mas_app_catalog_source }}"
      - "App channel ................ {{ mas_app_channel }}"


# 4. Apply initial security context constraints
# -----------------------------------------------------------------------------
- name: "Apply initial security context constraints"
  when: mas_app_id == "visualinspection"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/customsccinit.yml.j2') }}"

- name: "Add anyuid permissions to visualinspection service account"
  when: mas_app_id == "visualinspection"
  shell: |
    oc adm policy add-scc-to-user anyuid system:serviceaccount:{{ mas_app_namespace }}:ibm-mas-visualinspection-operator


# 5. Create entitlement secret and install the operator
# -----------------------------------------------------------------------------
- name: "Create IBM Entitlement Key"
  ibm.mas_devops.update_ibm_entitlement:
    namespace: "{{ mas_app_namespace }}"
    icr_username: "{{ icr_username }}"
    icr_password: "{{ icr_password }}"
    artifactory_username: "{{ artifactory_username }}"
    artifactory_password: "{{ artifactory_password }}"

- name: "Create ibm-mas Subscription"
  ibm.mas_devops.apply_subscription:
    namespace: "{{ mas_app_namespace }}"
    package_name: "ibm-mas-{{ 'manage' if (mas_app_id == 'health') else mas_app_id }}"
    package_channel: "{{ mas_app_channel }}"
    catalog_source: "{{ mas_app_catalog_source }}"
  register: subscription


# 6. Wait until the Application's CRD is available
# -----------------------------------------------------------------------------
- name: "Wait until the Application's CRD is available"
  include_tasks: "{{ role_path }}/../../common_tasks/wait_for_crd.yml"
  vars:
    crd_name: "{{ mas_app_fqn }}"


# 7. App installation
# -----------------------------------------------------------------------------
- name: Install application
  kubernetes.core.k8s:
    state: present
    namespace: "{{ mas_app_namespace }}"
    definition: "{{ lookup('template', 'templates/application.yml.j2') }}"


# 8. Wait for application to be ready
# -----------------------------------------------------------------------------
- name: "Wait for application to be ready ({{ mas_app_install_delay }}s delay)"
  kubernetes.core.k8s_info:
    api_version: "{{ mas_app_api_version }}"
    name: "{{ mas_instance_id }}"
    namespace: "{{ mas_app_namespace }}"
    kind: "{{ mas_app_kind }}"
    wait: yes # changed true to yes
    wait_condition:
      status: "True"
      type: Ready
    wait_sleep: 30
    wait_timeout: 120 # before we give up and fall back into the retry loop
  register: app_cr_result
  retries: "{{ mas_app_install_retries }}"
  delay: "{{ mas_app_install_delay }}"
  until:
    - app_cr_result.resources is defined
    - app_cr_result.resources | length > 0
    - app_cr_result.resources | json_query('[*].status.conditions[?type==`Ready`][].status') | select ('match','True') | list | length == 1


# 9. Apply final security context constraints
# -----------------------------------------------------------------------------
- name: "Apply final security context constraints"
  when: mas_app_id == "visualinspection"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/customscc.yml.j2') }}"

- name: "Remove anyuid permissions from visualinspection service account"
  when: mas_app_id == "visualinspection"
  shell: |
    oc adm policy remove-scc-from-user anyuid system:serviceaccount:{{ mas_app_namespace }}:ibm-mas-visualinspection-operator
