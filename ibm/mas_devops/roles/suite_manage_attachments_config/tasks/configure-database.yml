---
# Update Manage database with COS information
# ---------------------------------------------------------------------------------------------------------------------
- name: Lookup {{ mas_app_id | capitalize }} Route
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: "{{ mas_instance_id}}-{{ mas_app_id }}-{{ mas_workspace_id }}"
    namespace: "mas-{{ mas_instance_id }}-{{ mas_app_id }}"
  register: manage_route

- name: Assert {{ mas_app_id | capitalize }} Route is valid
  assert:
    that: "{{ manage_route.resources | length > 0 }}"
    fail_msg: "Failed! Manage Route {{ mas_instance_id}}-{{ mas_app_id }}-{{ mas_workspace_id }} not found..."

- name: Set {{ mas_app_id | capitalize }} Route variable
  set_fact:
    manage_url: "{{ manage_route.resources[0].spec.host }}"

- debug:
    msg: "{{ manage_url }}"

- name: "Lookup {{ mas_app_id | capitalize }} app DB2 instance {{ db2_instance_name }} in {{ db2_namespace }} namespace"
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ db2_namespace }}"
    label_selectors:
      - type=engine
      - app={{ db2_instance_name }}
  register: db2_pod
  failed_when:
    - db2_pod.resources is not defined
    - db2_pod.resources | length = 0

- name: Assert DB2 instance is valid
  assert:
    that: "{{ db2_pod.resources | length > 0 }}"
    fail_msg: "Failed! DB2 instance name {{ db2_instance_name }} not found in {{ db2_namespace }} namespace..."

- name: Set {{ mas_app_id | capitalize }} app DB2 pod name variable
  set_fact:
    db2_pod_name: "{{ db2_pod.resources[0].metadata.name if (db2_pod.resources is defined) else 'Undefined' }}"

- name: Create SQL script to update {{ mas_app_id | capitalize }} DB2 with storage provider information
  ansible.builtin.template:
    src: "db/{{ mas_manage_attachments_provider_template_file_config[mas_manage_attachments_provider] }}"
    dest: "/tmp/{{ mas_manage_attachments_provider }}_attachment_config.sh"
    mode: "777"

- name: Copy the SQL script into the {{ mas_app_id | capitalize }} app DB2 pod {{ db2_pod_name }}
  shell: "oc cp /tmp/{{ mas_manage_attachments_provider }}_attachment_config.sh {{ db2_namespace }}/{{ db2_pod_name }}:/tmp/{{ mas_manage_attachments_provider }}_attachment_config.sh"

- name: Run SQL script on {{ mas_app_id | capitalize }} app DB2 pod {{ db2_pod_name }} as db2inst username... (this can take several minutes)
  shell: oc exec -n {{ db2_namespace }} {{ db2_pod_name }} -- su -lc '/tmp/{{ mas_manage_attachments_provider }}_attachment_config.sh | tee /tmp/{{ mas_manage_attachments_provider }}_attachment_config.log' db2inst1
  register: setup_attachment_output
  failed_when: setup_attachment_output.rc != 0

- debug:
    msg: "{{ setup_attachment_output.stdout_lines }}"
