---
- name: Check if JDBC config file exists
  ansible.builtin.stat:
    path: "{{ mas_config_dir }}/jdbc-{{ mas_app_id }}-db2u.yml"
  register: jdbc_config_file_result

- name: Read JDBC config from file
  vars:
    jdbc_file_cfg: "{{ lookup('file', '{{ mas_config_dir }}/jdbc-{{ mas_app_id }}-db2u.yml') | from_yaml_all }}"
  ansible.builtin.set_fact:
    jdbccfg:
      # read from Secret
      username: "{{ jdbc_file_cfg[0].data.username | b64decode }}"
      password: "{{ jdbc_file_cfg[0].data.password | b64decode  }}"
      # read from JdbcCfg
      url: "{{ jdbc_file_cfg[1].spec.config.url }}"
      sslenabled: "{{ jdbc_file_cfg[1].spec.config.sslEnabled | default('True', true) | bool }}"
      ca: "{{ jdbc_file_cfg[1].spec.certificates | map(attribute='crt') | join(',') | replace(',','\n') }}"
  when: jdbc_config_file_result.stat.exists

- name: Read JDBC config from environment
  ansible.builtin.set_fact:
    jdbccfg:
      username: "{{ lookup('env', 'MAS_AIBROKER_DB2_USERNAME') }}"
      password: "{{ lookup('env', 'MAS_AIBROKER_DB2_PASSWORD') }}"
      url: "{{ lookup('env', 'MAS_AIBROKER_DB2_JDBC_URL') }}"
      sslenabled: "{{ lookup('env', 'MAS_AIBROKER_DB2_SSL_ENABLED') | default('True', true) | bool }}"
      ca: "{{ lookup('env', 'MAS_AIBROKER_DB2_CA_CERT') }}"
  when: not jdbc_config_file_result.stat.exists

- name: "Validate JDBC configuration"
  when: jdbccfg.username | length == 0
  ansible.builtin.fail:
    msg: "jdbccfg.username must not be empty"

- name: "Validate JDBC configuration"
  when: jdbccfg.password | length == 0
  ansible.builtin.fail:
    msg: "jdbccfg.password must not be empty"

- name: "Validate JDBC configuration"
  when: jdbccfg.url | length == 0
  ansible.builtin.fail:
    msg: "jdbccfg.url must not be empty"

- name: "Validate JDBC configuration"
  when: jdbccfg.ca | length == 0
  ansible.builtin.fail:
    msg: "jdbccfg.ca must not be empty"

- name: "Create secret for JDBC admin credentials"
  kubernetes.core.k8s:
    apply: yes
    template: "templates/jdbc/jdbc-admin-credentials.yml.j2"
