---
- name: "Check if S3 key secret exists in namespace: {{ aibroker_namespace }}"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ tenantNamespace }}----s3-secret"
    namespace: "{{ aibroker_namespace }}"
  register: s3_apikey_secret_info

- name: Get secret value
  command: oc get secret "{{ tenantNamespace }}----s3-secret" -n "{{ aibroker_namespace }}" -o jsonpath='{.data.BUCKET-NAME}'
  register: secret_value
  when:
    - s3_apikey_secret_info.resources | length != 0

- name: Decode secret value
  shell: "echo '{{ secret_value.stdout | default('') }}' | base64 -d"
  register: decoded_secret_value
  changed_when: false

- name: Create AWS credentials directory
  file:
    path: "{{ ansible_env.HOME }}/.aws"
    state: directory
    mode: "0700"

- name: Create AWS credentials file
  copy:
    dest: "{{ ansible_env.HOME }}/.aws/credentials"
    content: |
      [default]
      aws_access_key_id = {{ mas_aibroker_storage_accesskey }}
      aws_secret_access_key = {{ mas_aibroker_storage_secretkey }}
    mode: "0600"

- name: Create AWS config file
  copy:
    dest: "{{ ansible_env.HOME }}/.aws/config"
    content: |
      [default]
      region = {{ mas_aibroker_storage_region }}
    mode: "0600"

- name: Delete S3 bucket if script succeeds
  command: python3 {{ role_path }}/files/delete_s3.py "{{ decoded_secret_value.stdout }}"
  register: delete_result
  ignore_errors: yes
  when:
    - s3_apikey_secret_info.resources | length != 0

- name: Delete secret if bucket deleted successfully
  command: oc delete secret "{{ tenantNamespace }}----s3-secret" -n "{{ aibroker_namespace }}"
  register: secret_delete_result
  when:
    - s3_apikey_secret_info.resources | length != 0
