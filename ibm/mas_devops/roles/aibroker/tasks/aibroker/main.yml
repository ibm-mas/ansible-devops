---
# Provide Debug information
# -----------------------------------------------------------------------------
- name: "Debug information - IBM Maximo AI Broker"
  debug:
    msg:
      - "Namespace ...................... {{ aibroker_namespace }}"
      - "Channel ........................ {{ mas_app_channel }}"
      - "MAS Instance Id ................ {{ mas_instance_id }}"

# # Create IBM Maximo IBM Maximo AI Broker
# # -----------------------------------------------------------------------------
# - name: "Create IBM Maximo AI Broker namespace"
#   kubernetes.core.k8s:
#     state: present
#     api_version: v1
#     kind: Namespace
#     name: "{{ aibroker_namespace }}"

# Install the operator & create entitlement secret
# -----------------------------------------------------------------------------
- name: "Create IBM Entitlement Key"
  ibm.mas_devops.update_ibm_entitlement:
    namespace: "{{ aibroker_namespace }}"
    icr_username: "{{ mas_entitlement_username }}"
    icr_password: "{{ mas_entitlement_key }}"
    artifactory_username: "{{ artifactory_username }}"
    artifactory_password: "{{ artifactory_token }}"

# - name: "Create ibm-mas-aibroker Subscription"
#   ibm.mas_devops.apply_subscription:
#     namespace: "{{ aibroker_namespace }}"
#     package_name: ibm-mas-aibroker
#     package_channel: "{{ aibroker_channel }}"
#     catalog_source: "{{ mas_catalog_source }}"
#   register: subscription

- name: "Install AI Broker Operator Group"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/aibroker/operator-group.yml.j2') }}"

- name: "Install AI Broker Operator"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/aibroker/subscription.yml.j2') }}"

# Wait until the IBM Maximo AI Broker CRD is available
# -----------------------------------------------------------------------------
- name: "Wait until the IBM Maximo AI Broker Operator CRD is available"
  include_tasks: "{{ role_path }}/../../common_tasks/wait_for_crd.yml"
  vars:
    crd_name: aibrokerapps.apps.mas.ibm.com

# IBM Maximo AI Broker installation
# -----------------------------------------------------------------------------
- name: Create AI Broker CR
  vars:
    annotation_dict: "{{ mas_annotations | string | ibm.mas_devops.getAnnotations() }}"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ aibroker_namespace }}"
    template: templates/aibroker/aibrokerapp.yml.j2
  register: aibrokerAppResult

# Wait IBM Maximo AI Broker custom resource to be complete
# -----------------------------------------------------------------------------
- name: "Wait for AiBrokerApp custom resource to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: apps.mas.ibm.com/v1
    name: "{{ mas_instance_id }}"
    namespace: "{{ aibroker_namespace }}"
    kind: AiBrokerApp
  register: aibrokerapp_cr_result
  until:
    - aibrokerapp_cr_result.resources is defined and aibrokerapp_cr_result.resources | length == 1
    - aibrokerapp_cr_result.resources[0].status is defined
    - aibrokerapp_cr_result.resources | json_query('[*].status.conditions[?type==`Successful`][].status') | select ('match','True') | list | length == 1
  retries: 45 # approx 45 minutes before we give up
  delay: 60 # 1 minute

- name: Await to aibroker-api pod created
  pause:
    minutes: 3
    prompt: "Waiting for aibroker-api pod"

- name: "Wait for aibroker-api pod"
  shell: oc  wait --for=condition=ready pod -l app=aibroker-api -n {{ aibroker_namespace }}
  register: _is_not_exists
  until: _is_not_exists.stdout|int == 0
  retries: 60
  delay: 30

- name: "Wait for aibroker-api pod to be ready (30s delay)"
  shell: >
    oc get pod -l app=aibroker-api -n {{ aibroker_namespace }} --no-headers=true | grep -Evi "1/1|2/2|3/3|4/4|5/5|6/6|7/7|8/8|9/9|complete" | wc -l
  register: _is_not_ready
  until: _is_not_ready.stdout|int == 0
  retries: 60
  delay: 30
