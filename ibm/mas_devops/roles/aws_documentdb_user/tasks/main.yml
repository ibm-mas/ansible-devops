---
- name: Assert if (docdb_host and docdb_port) or docdb_hosts is not empty
  assert:
    that:
      - "(docdb_host != '' and docdb_port != '') or (docdb_hosts != '')"
    fail_msg: "Either (docdb_host and docdb_port) or docdb_hosts is required."
    success_msg: "(docdb_host & docdb_port) or docdb_hosts is present."

- name: Set docdb_hosts when not defined or empty
  set_fact:
    docdb_hosts: "{{ docdb_host }}:{{ docdb_port }}"
  when: docdb_hosts is not defined or docdb_hosts == ""

# tasks file for Docdb
- name: "Debug information"
  debug:
    msg:
      - "DocumentDB Host:Port .......................... {{ docdb_hosts }}"
      - "DocumentDB Master Username .................... {{ docdb_master_username }}"
      - "MAS Instance ID ............................... {{ mas_instance_id }}"
      - "DocumentDB instance credential name ........... {{ docdb_instance_credentials_secret_name }}"

# 1. Check for required software
# -----------------------------------------------------------------------------
- name: "Test if mongosh is installed"
  shell: mongosh --version
  register: mongosh_version
  ignore_errors: true

- name: "Fail if mongosh is not installed"
  assert:
    that: ( mongosh_version.rc == 0 )
    fail_msg: "mongosh must be installed (https://www.mongodb.com/docs/mongodb-shell/install/)"

# 2. create docdb user for MAS instance
# -----------------------------------------------------------------------------
- name: set fact for document DB host, port and user name
  # get both from env var
  set_fact:
    docdb_instance_username: "masinst_{{ mas_instance_id }}"

- name: Generate Mongo user password
  no_log: true
  set_fact:
    docdb_instance_password: "{{ lookup('password', '/dev/null length=20 chars=ascii_lowercase,ascii_uppercase,digits') }}"
  when: docdb_instance_password is undefined or docdb_instance_password == ""

- name: "Download Amazon DocumentDB public CA certs"
  shell: |
    wget https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem -O /tmp/global-bundle.pem

- name: "Download Amazon DocumentDB public govcloud CA certs"
  shell: |
    wget https://truststore.pki.us-gov-west-1.rds.amazonaws.com/global/global-bundle.pem -O /tmp/global-bundle-govcloud.pem

- name: "Concatenate PRM files"
  shell: |
    cat /tmp/global-bundle.pem /tmp/global-bundle-govcloud.pem > /tmp/global-bundle-complete.pem

- name: create js file from template
  template:
    src: create_user.js.j2
    dest: "/tmp/create_user.js"

- name: create change_user_password js file from template
  template:
    src: change_user_password.js.j2
    dest: "/tmp/change_user_password.js"

- name: create drop_user js file from template
  template:
    src: drop_user.js.j2
    dest: "/tmp/drop_user.js"

- name: Create docdb user for MAS instance
  shell: |
    mongosh --tls --host {{ docdb_hosts }} --tlsCAFile /tmp/global-bundle-complete.pem --username {{ docdb_master_username }}  --password {{ docdb_master_password }} /tmp/create_user.js
  register: creating_user_output
  when: user_action == 'add'
  failed_when: creating_user_output.rc not in [0] and ('User already exists' not in creating_user_output.stderr )

- name: Change docdb user password for MAS instance
  shell: |
    mongosh --tls --host {{ docdb_hosts }} --tlsCAFile /tmp/global-bundle-complete.pem --username {{ docdb_master_username }}  --password {{ docdb_master_password }} /tmp/change_user_password.js
  register: change_user_password_output
  when: user_action == 'add' and creating_user_output.rc not in [0] and ('User already exists' in creating_user_output.stderr )

- name: Drop docdb user of MAS instance
  shell: |
    mongosh --tls --host {{ docdb_hosts }} --tlsCAFile /tmp/global-bundle-complete.pem --username {{ docdb_master_username }}  --password {{ docdb_master_password }} /tmp/drop_user.js
  register: drop_user_password_output
  when: user_action == 'remove'

# 3. Save docdb user credentials into k8s Secret
# -----------------------------------------------------------------------------
- name: Create k8s Secret for docdb user credentials
  when: user_action == 'add'
  ansible.builtin.template:
    src: docdb_instance_user_credentials_secret.yaml.j2
    dest: "{{ mas_config_dir }}/{{ docdb_instance_credentials_secret_name }}.yml"
