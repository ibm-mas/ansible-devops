---
# Provide Debug information
# -----------------------------------------------------------------------------
- name: "Debug information - IBM Maximo AI Service"
  debug:
    msg:
      - "Namespace ...................... {{ aiservice_namespace }}"
      - "Channel ........................ {{ aiservice_channel }}"
      - "MAS Instance Id ................ {{ aiservice_instance_id }}"

# Install the operator & create entitlement secret
# -----------------------------------------------------------------------------
- name: "Create IBM Entitlement Key"
  ibm.mas_devops.update_ibm_entitlement:
    namespace: "{{ aiservice_namespace }}"
    icr_username: "{{ mas_entitlement_username }}"
    icr_password: "{{ mas_entitlement_key }}"
    artifactory_username: "{{ artifactory_username }}"
    artifactory_password: "{{ artifactory_token }}"

- name: "Create ibm-aiservice Subscription"
  ibm.mas_devops.apply_subscription:
    namespace: "{{ aiservice_namespace }}"
    package_name: ibm-aiservice
    package_channel: "{{ aiservice_channel }}"
    catalog_source: "{{ mas_catalog_source }}"
  register: subscription

# Wait until the IBM Maximo AI Service CRD is available
# -----------------------------------------------------------------------------
- name: "Wait until the IBM Maximo AI Service Operator CRD is available"
  include_tasks: "{{ role_path }}/../../common_tasks/wait_for_crd.yml"
  vars:
    crd_name: aiserviceapps.aiservice.ibm.com


# Lookup storage class availabiity
# -----------------------------------------------------------------------------
- name: "Load default storage class information"
  include_tasks: "{{ role_path }}/../../common_tasks/default_storage_classes.yml"


# Set AI Service Storage (Required)
# -----------------------------------------------------------------------------
- name: "Default AI Service Storage if not set by user"
  when: aiservice_storage_class is not defined or aiservice_storage_class == ""
  set_fact:
    aiservice_storage_class: "{{ defaultStorageClasses.rwx }}"

- name: "Assert that primary storage class has been defined"
  assert:
    that: aiservice_storage_class is defined and aiservice_storage_class != ""
    fail_msg: "aiservice_storage_class must be defined"

- name: "Debug"
  debug:
    msg: "AI Service storage class ................. {{ aiservice_storage_class }}"


# IBM Maximo AI Broker installation
# -----------------------------------------------------------------------------
- name: Create AI Service CR
  vars:
    annotation_dict: "{{ mas_annotations | string | ibm.mas_devops.getAnnotations() }}"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ aiservice_namespace }}"
    template: templates/aiservice/aiserviceapp.yml.j2

# Wait IBM Maximo AI Service custom resource to be complete
# -----------------------------------------------------------------------------
- name: "Wait for AIServiceApp custom resource to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: aiservice.ibm.com/v1
    name: "{{ aiservice_instance_id }}"
    namespace: "{{ aiservice_namespace }}"
    kind: AIServiceApp
  register: aiserviceapp_cr_result
  until:
    - aiserviceapp_cr_result.resources is defined and aiserviceapp_cr_result.resources | length == 1
    - aiserviceapp_cr_result.resources[0].status is defined
    - aiserviceapp_cr_result.resources | json_query('[*].status.conditions[?type==`Successful`][].status') | select ('match','True') | list | length == 1
  retries: 45 # approx 45 minutes before we give up
  delay: 60 # 1 minute
