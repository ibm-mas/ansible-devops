---
- name: Load variables (main)
  include_vars: "vars/main.yml"


# 1. Validate odh model deployment type
# -----------------------------------------------------------------------------
- name: Validate odh model deployment type
  ansible.builtin.assert:
    that:
      - aiservice_odh_model_deployment_type in ['raw', 'serverless']
    fail_msg: "AISERVICE_ODH_MODEL_DEPLOYMENT_TYPE must be one of: raw, serverless"

# 2. Deploy OpenShift Serverless operators
# -----------------------------------------------------------------------------
- include_tasks: tasks/serverless-operator.yml
  when: aiservice_odh_model_deployment_type is defined and aiservice_odh_model_deployment_type == "serverless"

- include_tasks: tasks/servicemesh-operator.yml
  when: aiservice_odh_model_deployment_type is defined and aiservice_odh_model_deployment_type == "serverless"

- include_tasks: tasks/authorino-operator.yml
- include_tasks: tasks/odh-operator.yml

- name: "Wait for opendatahub-operator-controller-manager to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    name: opendatahub-operator-controller-manager
    namespace: "{{ odh_namespace }}"
    kind: Deployment
  register: opendatahub_deployment
  until:
    - opendatahub_deployment.resources is defined
    - opendatahub_deployment.resources | length > 0
    - opendatahub_deployment.resources[0].status is defined
    - opendatahub_deployment.resources[0].status.replicas is defined
    - opendatahub_deployment.resources[0].status.readyReplicas is defined
    - opendatahub_deployment.resources[0].status.readyReplicas == opendatahub_deployment.resources[0].status.replicas
  retries: 10 # Approximately 10 minutes before we give up
  delay: 60 # 1 minute

# 3. Create DSCInitialization instance
# -----------------------------------------------------------------------------
- name: "Create DSCInitialization instance"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/odh/default-dsci.yml.j2') }}"

- name: "Wait for the DSCInitialization instance to be ready"
  kubernetes.core.k8s_info:
    api_version: dscinitialization.opendatahub.io/v1
    name: default-dsci
    namespace: opendatahub
    kind: DSCInitialization
  register: dsci_lookup
  until:
    - dsci_lookup.resources is defined and dsci_lookup.resources | length == 1
    - dsci_lookup.resources[0].status is defined
    - dsci_lookup.resources[0].status.phase is defined
    - dsci_lookup.resources[0].status.phase == 'Ready'
  retries: 15
  delay: 120


# 4. Create Data Science Cluster
# -----------------------------------------------------------------------------
- name: "Create Data Science Cluster"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/odh/data-science-cluster.yml.j2') }}"

- name: "Wait for the DSC to be ready"
  kubernetes.core.k8s_info:
    api_version: datasciencecluster.opendatahub.io/v1
    name: default-dsc
    kind: DataScienceCluster
  register: dsc_lookup
  until:
    - dsc_lookup.resources is defined and dsc_lookup.resources | length == 1
    - dsc_lookup.resources[0].status is defined
    - dsc_lookup.resources[0].status.phase is defined
    - dsc_lookup.resources[0].status.phase == 'Ready'
  retries: 15
  delay: 120


# 5. Create Istio Auth Rules
# -----------------------------------------------------------------------------
- include_tasks: tasks/istio-auth.yml
  when: aiservice_odh_model_deployment_type is defined and aiservice_odh_model_deployment_type == "serverless"


# 6. Install Network policy
# -----------------------------------------------------------------------------
# This network policy is added as a temporary workaround to resolve an issue (specifically on the ROKS cluster)
# where requests from the Kubernetes API to the odh-model-controller-webhook were being blocked.
# This was causing errors while creating a inference service.

- name: "Install network policy: allow-odh-model-controller"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/odh/allow-odh-model-controller-netpol.yml.j2') }}"
