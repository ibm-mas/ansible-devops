---
# 2. Create Operator Subscriptions
# -----------------------------------------------------------------------------
# Install the IBM Cloud Pak for Data platform operator
#
# This will result in two operators being installed into the cpd operator namespace:
# - cpd-platform-operator-manager
# - ibm-common-service-operator
# - ibm-namespace-scope-operator

- debug:
    msg:
      - "Cloud Pak For Data channel ................ {{ cpd_channel }}"
      - "Catalog source name ....................... {{ cpd_catalog_source_name }}"
      - "Catalog source namespace .................. {{ cpd_catalog_source_namespace }}"

# Clean up old cpd-platform operator
- name: "Clean up any {{ cpd_platform_operator_name }} subscription from {{ cpd_operators_namespace }}"
  vars:
    operator_name: "{{ cpd_platform_operator_name }}"
    operator_namespace: "{{ cpd_operators_namespace }}"
    operator_expected_csv: "{{ cpd_platform_operator_name }}.v{{ cpd_csv_version }}"
  include_tasks: "tasks/prereqs/uninstall-operator.yml"

- name: "create-subscriptions : Create Cloud Pak for Data platform subscription using channel: {{ cpd_channel }}"
  kubernetes.core.k8s:
    apply: yes
    template: "templates/cpd_platform/subscription.yml.j2"

- name: "create-subscriptions : Wait for {{ cpd_platform_operator_name }}-manager to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    name: "{{ cpd_platform_operator_name }}-manager"
    namespace: "{{ cpd_operators_namespace }}"
    kind: Deployment
  register: cpd_subscription
  until: cpd_subscription.resources[0].status.availableReplicas is defined
  retries: 10 # Approximately 10 minutes before we give up
  delay: 60 # 1 minute

# This is just a validation step to prevent the "wait tasks" to run before it gives enough time for the new cpd service operator version
# to start reconciling in case of an upgrade, otherwise it might not have given enough time for it to process the new version to be upgrade
# while its status' cr might still show 'completed'.
# With this, we ensure the new cpd service csv version operator is up and running with the new cr version before we check the cpd cr status
- name: "Wait CP4D subscription installedCSV version at {{ expected_installed_csv }}"
  vars:
    expected_installed_csv: "{{ cpd_platform_operator_name }}.v{{ cpd_csv_version }}"
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: Subscription
    namespace: "{{ cpd_operators_namespace }}"
    name: "cpd-operator"
  register: cpd_sub_info
  retries: 20
  delay: 60 # Retry for approx 20 minutes (60s * 20 attempts) before giving up
  until:
    - cpd_sub_info.resources is defined
    - cpd_sub_info.resources | length > 0
    - cpd_sub_info.resources[0].status is defined
    - cpd_sub_info.resources[0].status.installedCSV is defined
    - cpd_sub_info.resources[0].status.installedCSV == expected_installed_csv
