# This task will install 'cpd-platform' and 'opencloud-operators' catalog sources
# which will be responsible for feeding subscription for the following operators:
# - cpd-operator
# - ibm-common-service-operator
# - ibm-zen-operator
# - operand-deployment-lifecycle-manager
# - ibm-idp-config-ui-operator
# - ibm-mongodb-operator
# - ibm-commonui-operator
# - ibm-iam-operator
# - ibm-namespace-scope-operator
---
- name: "Apply 'cpd-platform' catalog sources"
  vars:
    cpd_catalog_name: "{{ cpd_platform_catalog_name }}"
    cpd_catalog_display_name: "{{ cpd_platform_catalog_display_name}}"
    cpd_catalog_operator_name: "{{ cpd_platform_catalog_operator_name }}"
    cpd_catalog_digest: "{{ cpd_platform_digest }}"
    cpd_catalog_registry: "{{ cpd_platform_registry }}"
  kubernetes.core.k8s:
    apply: yes
    template: "templates/catalog_sources/definition.yml.j2"

- name: "Apply 'opencloud-operators' catalog source"
  vars:
    cpd_catalog_name: "{{ opencloud_catalog_name }}"
    cpd_catalog_display_name: "{{ opencloud_catalog_display_name }}"
    cpd_catalog_operator_name: "{{ opencloud_catalog_operator_name }}"
    cpd_catalog_digest: "{{ opencloud_digest }}"
    cpd_catalog_registry: "{{ opencloud_registry }}"
  kubernetes.core.k8s:
    apply: yes
    template: "templates/catalog_sources/definition.yml.j2"

- name: "Apply 'zen' catalog source"
  when: cpd_51_or_higher
  vars:
    cpd_catalog_name: "{{ zen_catalog_name }}"
    cpd_catalog_display_name: "{{ zen_catalog_display_name }}"
    cpd_catalog_operator_name: "{{ zen_catalog_operator_name }}"
    cpd_catalog_digest: "{{ zen_digest }}"
    cpd_catalog_registry: "{{ zen_registry }}"
  kubernetes.core.k8s:
    apply: yes
    template: "templates/catalog_sources/definition.yml.j2"

- name: "Add zen catalog to those that we check"
  when: cpd_51_or_higher
  set_fact:
    cpd_custom_catalog_sources: "{{ cpd_custom_catalog_sources + [zen_catalog_name] }}"

- name: "Wait for catalog sources to be ready"
  kubernetes.core.k8s_info:
    api_version: operators.coreos.com/v1alpha1
    kind: CatalogSource
    name: "{{ lookup_catalog_source_item }}"
    namespace: "{{ cpd_catalog_source_namespace }}"
  register: catsrc_lookup
  until:
    - catsrc_lookup.resources is defined
    - catsrc_lookup.resources | length > 0
    - catsrc_lookup.resources[0].status is defined
    - catsrc_lookup.resources[0].status.connectionState is defined
    - catsrc_lookup.resources[0].status.connectionState.lastObservedState is defined
    - catsrc_lookup.resources[0].status.connectionState.lastObservedState == 'READY'
  retries: 60 # approx 30 minutes before we give up
  delay: 30 # seconds
  loop: "{{ cpd_custom_catalog_sources }}"
  loop_control:
    loop_var: lookup_catalog_source_item
    label: "Waiting '{{ lookup_catalog_source_item }}' catalog source to be ready..."
