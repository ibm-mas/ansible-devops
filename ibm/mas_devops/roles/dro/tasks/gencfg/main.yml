---
# 1. Prep variables for bascfg
# -----------------------------------------------------------------------------

# Check dro contact info
- name: "drocfg : Fail if DRO contact information has not been provided"
  when: dro_migration | lower != "true"
  assert:
    that:
      - dro_contact.email is defined and dro_contact.email != ""
      - dro_contact.first_name is defined and dro_contact.first_name != ""
      - dro_contact.last_name is defined and dro_contact.last_name != ""
    fail_msg: "One or more required environment variables are not defined [DRO_CONTACT_EMAIL, DRO_CONTACT_FIRSTNAME, DRO_CONTACT_LASTNAME]"


# 1. Lookup the endpoint route
# -----------------------------------------------------------------------------
- name: "drocfg : Get ibm-data-reporter route"
  kubernetes.core.k8s_info:
    api_version: route.openshift.io/v1
    kind: Route
    name: ibm-data-reporter
    namespace: "{{ dro_namespace }}"
  register: dro_route

- name: "drocfg : Assert that ibm-data-reporter route exists"
  ansible.builtin.assert:
    that:
      - dro_route is defined
      - dro_route.resources is defined
      - dro_route.resources | length == 1
    fail_msg: "Route not found: ibm-data-reporter"

- name: set dro route for bascfg
  set_fact:
    dro_endpoint_url: "https://{{ dro_route.resources[0].spec.host }}"
  when: (dro_route.resources | length == 1)

# 2. Lookup the DRO API key
- name: "drocfg : Create ibm-data-reporter-operator-api SA token secret"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: ibm-data-reporter-operator-api-token
        namespace: "{{ dro_namespace }}"
        labels:
          secret-owner: ibm-data-reporter-operator-api
        annotations:
          kubernetes.io/service-account.name: ibm-data-reporter-operator-api
      type: kubernetes.io/service-account-token

- name: "drocfg : Get ibm-data-reporter-operator-api secret"
  kubernetes.core.k8s_info:
    kind: Secret
    name: ibm-data-reporter-operator-api-token
    namespace: "{{ dro_namespace }}"
    label_selectors:
      - secret-owner = ibm-data-reporter-operator-api
  register: token_secret_info

- name: "drocfg : Set dro token api for bascfg"
  set_fact:
    dro_api_key: "{{ token_secret_info.resources[0].data.token | b64decode }}"
  when: (token_secret_info.resources | length != 0)

# 3. Lookup the certificates
# -----------------------------------------------------------------------------
- name: "drocfg : Lookup the default cluster ingress secret"
  include_tasks: "{{ role_path }}/../../common_tasks/get_ingress_cert.yml"

# Break up the certificate into an array
- name: "udscfg : Set UDS cert variable"
  set_fact:
    dro_tls_crt: "{{ cluster_ingress_tls_crt }}"
  no_log: true

# Load uds_certs template to dynamically set as many uds certificates as identified
- set_fact:
    dro_certs: "{{ lookup('ansible.builtin.template', 'templates/dro-certs.yml.j2') }}"
  when:
    - dro_tls_crt is defined
    - dro_tls_crt | length > 0

- name: "gencfg : Fail if dro_tls_crt has not been provided"
  assert:
    that: dro_tls_crt is defined and dro_tls_crt|length != 0
    fail_msg: "dro_tls_crt property has not been set"

# 4.Provide Debug information
# -----------------------------------------------------------------------------
- name: "udscfg : Debug generated config"
  debug:
    msg:
      - "DRO URL ............................ {{ dro_endpoint_url }}"
      - "Cluster Ingress TLS Certificate .... {{ cluster_ingress_tls_crt | default('<undefined>', True) }}"
      - "DRO TLS Certificate ................ {{ dro_tls_crt }}"
      - "DRO Contact First Name ............. {{ dro_contact.first_name | default('<undefined>', True) }}"
      - "DRO Contact Last Name .............. {{ dro_contact.last_name | default('<undefined>', True) }}"
      - "DRO Contact e-mail ................. {{ dro_contact.email | default('<undefined>', True) }}"

# 5. Generate BASCfg for MAS
# -----------------------------------------------------------------------------
- name: "gencfg : Copy BASCfg to filesystem"
  ansible.builtin.template:
    src: bascfg.yml.j2
    dest: "{{ mas_config_dir }}/dro.yml"
    mode: "664"
  when:
    - mas_instance_id is defined
    - dro_migration | lower != "true"

# 6. DRO Migration: Clean BASCfg of UDS
# -----------------------------------------------------------------------------
- name: "gencfg: get existing UDS BASCfg"
  kubernetes.core.k8s_info:
    api_version: config.mas.ibm.com/v1
    kind: BasCfg
  register: udscfgs
  when:
    - dro_migration != "" and dro_migration | lower == "true"

- name: CleanUp UDS BASCfgs and Create DRO BASCfgs
  include_tasks: "tasks/gencfg/migrate.yml"
  loop: "{{ udscfgs.resources }}"
  when:
    - dro_migration != "" and dro_migration | lower == "true"
