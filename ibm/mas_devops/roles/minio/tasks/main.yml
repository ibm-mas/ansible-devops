---
- name: Load variables (main)
  include_vars: "vars/main.yml"

# Get cluster domain
# -----------------------------------------------------------------------------
- name: "Get cluster subdomain"
  kubernetes.core.k8s_info:
    api_version: config.openshift.io/v1
    kind: Ingress
    name: cluster
  register: _cluster_subdomain

- name: "Set fact: cluster subdomain"
  set_fact:
    cluster_domain: "{{ _cluster_subdomain.resources[0].spec.domain }}"

- name: "Debug: cluster domain"
  debug:
    msg: "Cluster domain ........................ {{ cluster_domain }}"
    
# Load default storage class (if not provided by the user)
# -----------------------------------------------------------------------------
- include_tasks: tasks/determine-storage-classes.yml

# create minio namespace
- name: 'Create minio namespace'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/minio/minio-ns.yml.j2') }}"

# create minio PVC
- name: 'Create minio pvc'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/minio/minio-pvc.yml.j2') }}"

# create minio deployment
- name: 'Create minio deployment'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/minio/minio-deployment.yml.j2') }}"

# create minio service
- name: 'Create minio service'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/minio/minio-service.yml.j2') }}"

# create minio route
- name: 'Create minio route'
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/minio/minio-route.yml.j2') }}"

- name: "Create and wait for CA certificate"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/certs/tls.yml.j2') }}"
    wait: yes
    wait_timeout: 600 #10 minutes
    wait_condition:
      type: Ready
      status: True
  register: createCaCert