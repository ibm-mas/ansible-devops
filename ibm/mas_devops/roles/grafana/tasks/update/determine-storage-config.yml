---
# Provide intelligent storage class selection to minimize required user knowledge

# 1. Set Grafana Instance Storage Class and Size from existing V5 Operator
# -----------------------------------------------------------------------------
- name: "update : determine-storage-config : Get V5 Grafana Instance"
  kubernetes.core.k8s_info:
    api_version: grafana.integreatly.org/v1beta1
    name: mas-grafana
    namespace: "{{ grafana_v5_namespace }}"
    kind: Grafana
  register: grafana_cr_result

- name: "update : determine-storage-config : Set the Grafana storage class and size"
  when: grafana_cr_result.resources[0].spec.persistentVolumeClaim is defined
  set_fact:
    grafana_instance_storage_class: "{{ grafana_cr_result.resources[0].spec.persistentVolumeClaim.spec.storageClassName }}"
    grafana_instance_storage_size: "{{ grafana_cr_result.resources[0].spec.persistentVolumeClaim.spec.resources.requests.storage }}"


# 2. Set Grafana Instance Storage Class and Size from existing V4 Operator
# -----------------------------------------------------------------------------
- name: "update : determine-storage-config : Get V4 Grafana Instance"
  when: grafana_instance_storage_class is not defined or grafana_instance_storage_class == ""
  kubernetes.core.k8s_info:
    api_version: integreatly.org/v1alpha1
    name: mas-grafana
    namespace: "{{ grafana_v4_namespace }}"
    kind: Grafana
  register: grafana_cr_result

- name: "update : determine-storage-config : Set the Grafana storage class and size"
  when:
    - grafana_instance_storage_class is not defined or grafana_instance_storage_class == ""
    - grafana_cr_result.resources[0].spec.dataStorage is defined
  set_fact:
    grafana_instance_storage_class: "{{ grafana_cr_result.resources[0].spec.dataStorage.class }}"
    grafana_instance_storage_size: "{{ grafana_cr_result.resources[0].spec.dataStorage.size }}"


# 3. Set Default Grafana Instance Storage Class if not already determined
# -----------------------------------------------------------------------------
- name: "update : determine-storage-config : Load default storage class information"
  include_tasks: "{{ role_path }}/../../common_tasks/default_storage_classes.yml"

- name: "update : determine-storage-config : Default Grafana Instance Storage if still not set"
  when: grafana_instance_storage_class is not defined or grafana_instance_storage_class == ""
  set_fact:
    grafana_instance_storage_class: "{{ defaultStorageClasses.rwo }}"


# 4. Fail if Grafana Storage Class has not been set
# -----------------------------------------------------------------------------
- name: "update : determine-storage-config : Assert that Grafana Instance storage class has been defined"
  assert:
    that: grafana_instance_storage_class is defined and grafana_instance_storage_class != ""
    fail_msg: "grafana_instance_storage_class cannot be determined"


# 5. Debug storage class configuration
# -----------------------------------------------------------------------------
- name: "update : determine-storage-config : Debug grafana storage class configuration"
  debug:
    msg:
      - "Storage class (grafana instance) ....... {{ grafana_instance_storage_class }}"
      - "Storage size (grafana instance) ....... {{ grafana_instance_storage_size }}"
