---
# 1. Wait for the spark control plane to be ready, allocate more resource if
#    necessary
# -----------------------------------------------------------------------------
- include_tasks: "tasks/wait/wait-spark-control-plane.yml"

# 2. Wait for CP4D service CR to be ready

# -----------------------------------------------------------------------------
# We can't stop waiting on Failed status, as it will report failed multiple
# times during initial reconcile ... we just need to keep waiting.
- name: "wait-spark : Wait for analyticsengineStatus 'Completed' (4m interval)"
  kubernetes.core.k8s_info:
    api_version: "{{ cpd_service_info[cpd_service_name].api_version }}"
    kind: "{{ cpd_service_info[cpd_service_name].crd_kind }}"
    name: "{{ cpd_service_info[cpd_service_name].cr_name }}"
    namespace: "{{ cpd_instance_namespace }}"
  register: cpd_cr_lookup
  until:
    - cpd_cr_lookup.resources is defined
    - cpd_cr_lookup.resources | length == 1
    - cpd_cr_lookup.resources[0].status is defined
    - cpd_cr_lookup.resources[0].status.analyticsengineStatus is defined
    - cpd_cr_lookup.resources[0].status.analyticsengineStatus == "Completed" # or cpd_cr_lookup.resources[0].status.analyticsengineStatus == "Failed"
  retries: 30 # Up to 2 hours
  delay: 240 # Every 4 minutes

- name: "wait-spark : Check that the analyticsengineStatus is 'Completed'"
  assert:
    that: cpd_cr_lookup.resources[0].status.analyticsengineStatus == "Completed"
    fail_msg: "Analytics Engine (Apache Spark) install failed (analyticsengineStatus)"
