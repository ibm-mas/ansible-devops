---
# 1. Wait for couch-db stateful set to start all the replica pods
# -----------------------------------------------------------------------------
- name: "wait-couchdb: Wait for CouchDB pods to be created"
  k8s_info:
    kind: StatefulSet
    namespace: "{{ cpd_instance_namespace }}"
    name: "wdp-couchdb"
  register: couchdbStatefulSet
  retries: 40 # Give 20 minutes for the ccs Operator to start CouchDB Pods (Logs show this taking ~7 minutes in a good run)
  delay: 30
  until: >-
    (( couchdbStatefulSet.resources[0].status is defined
    and couchdbStatefulSet.resources[0].status.replicas is defined
    and couchdbStatefulSet.resources[0].status.replicas == 0 )
    or ( couchdbStatefulSet.resources[0].status is defined
    and couchdbStatefulSet.resources[0].status.updatedReplicas is defined
    and couchdbStatefulSet.resources[0].status.replicas == couchdbStatefulSet.resources[0].status.updatedReplicas ))


# 2. Wait for couchdb replica pods to become ready
# -----------------------------------------------------------------------------
- name: "wait-couchdb: Wait for CouchDB pods to be become ready"
  k8s_info:
    kind: StatefulSet
    namespace: "{{ cpd_instance_namespace }}"
    name: "wdp-couchdb"
  register: couchdbStatefulSet
  retries: 10 # Give 5 minutes for the pods to become ready
  delay: 30
  until: >-
    couchdbStatefulSet.resources[0].status.readyReplicas is defined
    and couchdbStatefulSet.resources[0].status.replicas == couchdbStatefulSet.resources[0].status.readyReplicas
  #ignore-errors: true # If this fails then we restart pending pods below
  failed_when: false

# 2. Restart any couchDB pods that are still Pending
# -----------------------------------------------------------------------------
- set_fact:
    is_couchdb_ready: true
  when:
    couchdbStatefulSet.resources[0].status.readyReplicas is defined
    and couchdbStatefulSet.resources[0].status.replicas == couchdbStatefulSet.resources[0].status.readyReplicas

- name: "wait-couchdb: Detecting and restarting pending CouchDB Pods"
  block:
    - name: "install-cp4d : Get pending CouchDB Pods"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        label_selectors:
          - "app=couchdb"
        field_selectors:
          - "status.phase=Pending"
        namespace: "{{ cpd_instance_namespace }}"
      register: pending_pod_lookup

    - set_fact:
        pending_pod_names: "{{ pending_pod_lookup.resources | map(attribute='metadata.name') }}"

    - debug:
        msg: "Restarting pending CouchDB Pods: {{ pending_pod_names }}"

    - name: "wait-couchdb: Restarting pending CouchDB Pods"
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Pod
        namespace: "{{ cpd_instance_namespace }}"
        name: "{{ item }}"
      loop: "{{ pending_pod_names }}"

    # 3. Wait again couchdb replica pods to become ready
    # -----------------------------------------------------------------------------
    - name: "wait-couchdb: Wait for CouchDB pods to be become ready"
      k8s_info:
        kind: StatefulSet
        namespace: "{{ cpd_instance_namespace }}"
        name: "wdp-couchdb"
      register: couchdbStatefulSet
      retries: 10 # Give another 5 minutes for the pods to become ready
      delay: 30
      until: >-
        couchdbStatefulSet.resources[0].status.readyReplicas is defined
        and couchdbStatefulSet.resources[0].status.replicas == couchdbStatefulSet.resources[0].status.readyReplicas
      failed_when: false # We handle and log the failure below.

    - name: "wait-couchdb: Fail if CouchDB pods are not ready"
      block:
        - name: "install-cp4d : Get Pending CouchDB Pods"
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Pod
            label_selectors:
              - "app=couchdb"
            field_selectors:
              - "status.phase=Pending"
            namespace: "{{ cpd_instance_namespace }}"
          register: pending_pod_lookup

        - fail:
            msg:
              - "CouchDB pods are not ready {{ couchdbStatefulSet.resources[0].status }}"
              - "Pending CouchDB Pods: {{ pending_pod_lookup.resources | map(attribute='metadata.name') }}"
      when:
        couchdbStatefulSet.resources[0].status.replicas != couchdbStatefulSet.resources[0].status.readyReplicas

  when: is_couchdb_ready is not defined
