---
# Validate properties are provided
# -----------------------------------------------------------------------------
# Lookup default Cloud Pak for Data version based on MAS catalog
- include_tasks: "{{ role_path }}/../cp4d/tasks/determine-ibmcatalog-tag.yml"

- debug:
    msg:
      - "Catalog Version ............................ {{ (catalog_tag is defined and catalog_tag != '') | ternary(catalog_tag, 'Undefined') }}"
      - "Cloud Pak for Data version ................. {{ cpd_product_version | default('Undefined') }}"

# 1. Debug
# -----------------------------------------------------------------------------
# 1. Lookup storage class availabiity
# -----------------------------------------------------------------------------
- name: "Load supported Cloud Pak for Data information"
  include_vars: "{{ role_path }}/../../common_vars/cp4d_supported_versions.yml"

- name: "Check that Cloud Pak for Data service name and product version has been provided"
  assert:
    that:
      - cpd_service_name is defined and cpd_service_name != ""
      - cpd_product_version is defined and cpd_product_version != ""
    fail_msg: "Cloud Pak for Data service name (cpd_service_name) and version (cpd_product_version) are required parameter to run this role"

- name: "Check that provided Cloud Pak for Data version is supported for MAS"
  assert:
    that:
      - cpd_product_version in cpd_supported_versions
    fail_msg: "Cloud Pak for Data version ({{ cpd_product_version }}) is not a supported version for MAS. Supported Cloud Pak for Data versions for MAS are: {{ cpd_supported_versions }}"

# 2. Check Cloud Pak for Data is installed and ready
# -----------------------------------------------------------------------------
# If IbmCpd platform custom resource is still named 'ibmcpd', use that as 'cpd_platform_cr_name'
# otherwise stick with new default name 'ibmcpd-cr'
- name: "Check if there's an existing CloudPak for Data CR named 'ibmcpd'"
  kubernetes.core.k8s_info:
    api_version: cpd.ibm.com/v1
    name: ibmcpd
    namespace: "{{ cpd_instance_namespace }}"
    kind: Ibmcpd
  register: existing_ibmcpd_lookup

- when:
    - existing_ibmcpd_lookup.resources is defined
    - existing_ibmcpd_lookup.resources | length > 0
  set_fact:
    cpd_platform_cr_name: "ibmcpd"

- name: "Lookup Cloud Pak for Data CR named '{{ cpd_platform_cr_name }}'"
  kubernetes.core.k8s_info:
    api_version: cpd.ibm.com/v1
    kind: Ibmcpd
    name: "{{ cpd_platform_cr_name }}"
    namespace: "{{ cpd_instance_namespace }}"
  register: ibmcpd_info

# We won't be able to install any cpd service if cpd itself is not installed
- name: "Check if Cloud Pak for Data is installed"
  assert:
    that:
      - ibmcpd_info.resources is defined
      - ibmcpd_info.resources | length > 0
      - ibmcpd_info.resources[0].status is defined
      - ibmcpd_info.resources[0].status.controlPlaneStatus is defined
    fail_msg: "Failed! IBM Cloud Pak for Data must be installed before installing any CloudPak for Data service. Run 'cp4d' role to install it."

# We won't be able to install any cpd service if cpd itself is not healthy
- name: "Check if Cloud Pak for Data is healthy"
  assert:
    that: ibmcpd_info.resources[0].status.controlPlaneStatus == 'Completed'
    fail_msg:
      - "Failed! IBM Cloud Pak for Data must be ready and successfully installed before installing any CloudPak for Data service."
      - "Current IBM Cloud Pak for Data installation status: {{ ibmcpd_info.resources[0].status.controlPlaneStatus }}"

# 3. Run the CPD service installation
# -----------------------------------------------------------------------------
- name: "Run install"
  include_tasks: "install.yml"
