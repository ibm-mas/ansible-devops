---
# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------
- name: "Fail if required properties are not provided"
  assert:
    that:
      - ocp_release is defined and ocp_release != ""
      - registry_public_url_with_path_redhat is defined and registry_public_url_with_path_redhat != ""
      - mirror_working_dir is defined and mirror_working_dir != ""
    fail_msg: "One or more required properties are missing"

# 2a. Perform Mirroring
# -----------------------------------------------------------------------------
- name: "Generate ImageSetConfiguration"
  ansible.builtin.template:
    src: imagesetconfiguration.yml.j2
    dest: "{{ mirror_working_dir }}/imageset-ocp{{ ocp_release }}.yml"
    mode: "664"


# 2b. Create AWS ECR Repositories if required
# -----------------------------------------------------------------------------
- name: "Create AWS ECR Repositories"
  when:
    - registry_is_ecr == true
  block:
    - name: Create validation repository required for oc mirror command
      ansible.builtin.shell: "aws ecr create-repository --repository-name {{ registry_prefix_redhat }}/oc-mirror --region {{ registry_ecr_aws_region }}"
      ignore_errors: true

    - name: "{{ ocp_release }} : dry mode mirror command"
      shell: >
        DOCKER_CONFIG={{ mirror_working_dir }} oc mirror --dry-run --dest-skip-tls --config={{ mirror_working_dir }}/imageset-ocp{{ ocp_release }}.yml docker://{{ registry_public_url_with_path_redhat }}
      register: ocimagemirror_dryrun_result
      ignore_errors: true

    - name: "{{ ocp_release }} : Debug mirror command dry mode"
      debug:
        msg:
          - "{{ ocimagemirror_dryrun_result.stderr_lines }} "

    - name: "{{ ocp_release }} : Fail if dry mode mirror is not successful"
      assert:
        that: ocimagemirror_dryrun_result.rc == 0
        fail_msg: "mirror command in dry mode failed."

    - name: Filter out repository names that must be created in ECR
      set_fact:
        repos_to_add: "{{ ocimagemirror_dryrun_result.stderr_lines | ibm.mas_devops.get_ecr_repositories }}"

    - name: Repositories that will be created in ECR
      debug:
        msg: "{{ repos_to_add }}"

    - name: Create ECR Repositories
      ansible.builtin.shell: "aws ecr create-repository --repository-name {{ item }} --region {{ registry_ecr_aws_region }}"
      ignore_errors: true
      loop: "{{ repos_to_add }}"

- name: "Debug Information"
  debug:
    msg:
      - "Command ...................... DOCKER_CONFIG={{ mirror_working_dir }} oc mirror --dest-skip-tls --config={{ mirror_working_dir }}/imageset-ocp{{ ocp_release }}.yml docker://{{ registry_public_url_with_path_redhat }}"
      - "Log File ..................... {{ mirror_working_dir }}/logs/mirror-direct-ocp{{ ocp_release }}.log"

- name: "Mirror Red Hat content from source registry to target registry"
  shell: >
    DOCKER_CONFIG={{ mirror_working_dir }} oc mirror --dest-skip-tls --config={{ mirror_working_dir }}/imageset-ocp{{ ocp_release }}.yml docker://{{ registry_public_url_with_path_redhat }} &> {{ mirror_working_dir }}/logs/mirror-direct-ocp{{ ocp_release }}.log
