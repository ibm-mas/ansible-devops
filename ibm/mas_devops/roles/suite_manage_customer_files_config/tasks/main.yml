---
# mas_instance_id is required in order to be able to lookup for manage application resources
- name: "Fail if mas_instance_id is not provided"
  assert:
    that: mas_instance_id is defined and mas_instance_id != ""
    fail_msg: "mas_instance_id property is required"

# mas_workspace_id is required in order to be able to lookup for manage application resources
- name: "Fail if mas_workspace_id is not provided"
  assert:
    that: mas_workspace_id is defined and mas_workspace_id != ""
    fail_msg: "mas_workspace_id property is required"

# cos_type is required
- name: "Fail if cos_type is not provided"
  assert:
    that:
      - cos_type is defined and cos_type in cos_type_supported
    fail_msg: "cos_type property is required and must be set to one of the supported storage providers: {{ cos_type_supported }}"

# Configure Manage Doclinks
# ---------------------------------------------------------------------------------------------------------------------
- name: "Running {{ cos_type }} logging configuration for Manage application"
  include_tasks: "tasks/setup-manage-custfiles.yml"

- name: "Debug Customer Files - Bucket Configuration details"
  debug:
    msg:
      - "{{ cos_type | upper }} URL ........................... {{ cos_url }}"
      - "{{ cos_type | upper }} Bucket Names .................. [{{ custfiles_bucketname }}, {{ custfiles_bucketname_backup }}, {{ custfiles_bucketname_recovery }}]"
      - "{{ cos_type | upper }} Bucket Region ................. {{ cos_bucket_region }}"
      - "{{ cos_type | upper }} Username ...................... {{ cos_username }}"
      - "{{ cos_type | upper }} User Access Key ID ............ {{ cos_access_key_id }}"
      - "{{ cos_type | upper }} User Secret Access Key ........ {{ cos_secret_access_key }}"

# Wait for ManageWorkspace CR to reconcile and to be ready
# ---------------------------------------------------------------------------------------------------------------------
- name: "Wait for ManageWorkspace to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: v1
    name: "{{ manage_workspace_cr_name }}"
    namespace: "mas-{{ mas_instance_id }}-manage"
    kind: "ManageWorkspace"
    wait: true
    wait_condition:
      status: "True"
      type: Ready
    wait_sleep: 30
    wait_timeout: 200 # before we give up and fall back into the retry loop
  register: app_cr_result
  retries: 20
  delay: 60 # seconds
  until:
    - app_cr_result.resources is defined
    - app_cr_result.resources | length > 0
    - app_cr_result.resources | json_query('[*].status.conditions[?type==`Running`][].reason') | select ('match','Successful') | list | length == 1
