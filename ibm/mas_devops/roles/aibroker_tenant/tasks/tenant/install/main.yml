---
- name: "Check if tenant namespace: {{ tenantNamespace }} exists"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ tenantNamespace }}"
  register: namespace_info

- name: "Create a tenant namespace: {{ tenantNamespace }}"
  kubernetes.core.k8s:
    name: "{{ tenantNamespace }}"
    api_version: v1
    kind: Namespace
  when:
    - namespace_info.resources | length == 0

- name: "Create tenant CR"
  vars:
    annotation_dict: "{{ mas_annotations | string | ibm.mas_devops.getAnnotations() }}"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ aibroker_namespace }}"
    template: templates/aibroker/aibrokerworkspace.yml.j2

- name: "Wait for tenant CR to be ready"
  kubernetes.core.k8s_info:
    api_version: apps.mas.ibm.com/v1
    name: "{{ tenantNamespace }}"
    namespace: "{{ aibroker_namespace }}"
    kind: AiBrokerWorkspace
  register: aibrokerworkspace_cr_result
  until:
    - aibrokerworkspace_cr_result.resources is defined and aibrokerworkspace_cr_result.resources | length == 1
    - aibrokerworkspace_cr_result.resources[0].status is defined
    - aibrokerworkspace_cr_result.resources | json_query('[*].status.conditions[?type==`Successful`][].status') | select ('match','True') | list | length == 1
  retries: 45 # approx 45 minutes before we give up
  delay: 60 # 1 minute

- name: "Copy secrets to namespace: {{ tenantNamespace }}"
  shell: 'oc get secret {{ item }} -n mas-{{ mas_instance_id }}-aibroker -o yaml | sed "s/namespace: .*/namespace: {{ tenantNamespace }}/" | oc apply --force -f -'
  with_items:
    - km-s3-secret
    - "{{ aibroker_pull_secret_name }}"

- name: "Check if SLS key secret exists in namespace: {{ aibroker_namespace }}"
  k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ tenantNamespace }}----sls-secret"
    namespace: "{{ aibroker_namespace }}"
  register: sls_secret_info

# If sls secret does not exist then create one.
- when:
    - sls_secret_info.resources | length == 0
    - mas_aibroker_saas == true
  block:
    - name: "Create cert location {{ mas_aibroker_path_ca_crt }}"
      shell: mkdir -p '{{ mas_aibroker_path_ca_crt }}'

    - name: "Insert SLS cert ca to file located {{ mas_aibroker_path_ca_crt }}"
      shell: "echo '{{ slscfg.ca }}' > '{{ mas_aibroker_path_ca_crt }}/sls_ca.crt' "

    - name: debug #TODO: remove before final commit
      debug:
        msg:
          - "tenantNamespace ..... {{ tenantNamespace }} "
          - "mas_instance_id ..... {{ mas_instance_id }} "
          - "mas_aibroker_sls_url ..... {{ slscfg.url }} "
          - "mas_aibroker_sls_registration_key ..... {{ slscfg.registration_key }} "
          - "mas_aibroker_path_ca_crt ..... {{ mas_aibroker_path_ca_crt }} "

    - name: Create SLS secret
      script: "{{ role_path }}/files/create_sls_secret.sh {{ role_path }} {{ tenantNamespace }} {{ mas_instance_id }} {{ slscfg.url }} {{ slscfg.registration_key }} {{ mas_aibroker_path_ca_crt }}/sls_ca.crt"
      register: sls_secret_output

- name: "Create network policy for predictor"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/tenant/ingress-allow-isvc.yml.j2') }}"
