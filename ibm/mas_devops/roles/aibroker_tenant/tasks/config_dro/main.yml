---
- name: Check if DRO config file exists
  stat:
    path: "{{ mas_config_dir }}/dro.yml"
  register: dro_file_result

- name: Read DRO config from file
  vars:
    dro_file_cfg: "{{ lookup('file', '{{ mas_config_dir }}/dro.yml') | from_yaml_all }}"
  ansible.builtin.set_fact:
    drocfg:
      secret_name: "{{ dro_file_cfg[0].metadata.name }}"
      registration_key: "{{ dro_file_cfg[0].stringData.api_key }}"
      url: "{{ dro_file_cfg[1].spec.config.url }}"
      ca: "{{ dro_file_cfg[1].spec.certificates | map(attribute='crt') | join(',') | replace(',','\n') }}"
  when: dro_file_result.stat.exists

- name: Read DRO config from environment
  ansible.builtin.set_fact:
    drocfg:
      secret_name: "{{ lookup('env', 'MAS_AIBROKER_DRO_SECRET_NAME') }}"
      registration_key: "{{ lookup('env', 'MAS_AIBROKER_DRO_API_KEY') }}"
      url: "{{ lookup('env', 'MAS_AIBROKER_DRO_URL') }}"
      ca: "{{ lookup('env', 'MAS_AIBROKER_DRO_CA_CERT') }}"
  when: not dro_file_result.stat.exists

- name: "Validate DRO configuration"
  when: drocfg.secret_name | length == 0
  fail:
    msg: "drocfg.secret_name must not empty"

- name: "Validate DRO configuration"
  when: drocfg.registration_key | length == 0
  fail:
    msg: "drocfg.registration_key must not empty"

- name: "Validate DRO configuration"
  when: drocfg.url | length == 0
  fail:
    msg: "drocfg.url must not empty"

- name: "Validate DRO configuration"
  when: drocfg.ca | length == 0
  fail:
    msg: "drocfg.ca must not empty"

- name: Create DRO secret
  kubernetes.core.k8s:
    state: present
    namespace: "{{ aibroker_namespace }}"
    template: "templates/dro/dro-secret.yml.j2"
