---
# Check if encryption secret already exists
# ------------------------------------------------------------------------
# Condition 1: Check if encryptionSecret is already defined in Manage Workspace CR (assuming Manage could be already installed)
- name: "Lookup ManageWorkspace CR to check if encryption secret is already setup"
  no_log: true
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ManageWorkspace
    name: "{{ mas_instance_id }}-{{ mas_workspace_id }}"
    namespace: "mas-{{ mas_instance_id }}-manage"
  register: managews_output

# if encryptionSecret is already defined in ManageWorkspace CR
# then set 'mas_app_settings_encryption_secret_name' to the same secret name found in ManageWorkspace CR to avoid conflicts
- set_fact:
    mas_app_settings_encryption_secret_name: "{{ managews_output.resources[0].spec.settings.db.encryptionSecret }}"
  when:
    - managews_output.resources is defined
    - managews_output.resources | length > 0
    - managews_output.resources[0].spec.settings.db.encryptionSecret is defined
    - managews_output.resources[0].spec.settings.db.encryptionSecret | length > 0

# Condition 2: if encryptionSecret is NOT defined in ManageWorkspace CR (or even if ManageWorkspace CR does not exist)
# then check if default encryption secret created by Manage operator "{{ mas_workspace_id }}-{{ mas_app_id }}-encryptionsecret" exists
- name: "Lookup for possible existing {{ mas_app_settings_encryption_default_secret_name }}"
  when: mas_app_settings_encryption_secret_name is not defined or mas_app_settings_encryption_secret_name == ""
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: "{{ mas_app_settings_encryption_default_secret_name }}"
    namespace: "mas-{{ mas_instance_id }}-{{ mas_app_id }}"
  register: encryption_secret_info

# Set default Manage secret name to store encryption keys
# ------------------------------------------------------------------------
# Condition 3: If mas_app_settings_encryption_secret_name is not yet defined meaning it does not yet exist in Manage Workspace CR (# condition 1)
# then it will be set to '{{ mas_workspace_id }}-{{ mas_app_id }}-encryptionsecret'
- set_fact:
    mas_app_settings_encryption_secret_name: "{{ mas_app_settings_encryption_default_secret_name }}"
  when: mas_app_settings_encryption_secret_name is not defined or mas_app_settings_encryption_secret_name == ""

- set_fact:
    is_encryption_secret_existing: "{{ managews_output.resources[0].spec.settings.db.encryptionSecret is defined and managews_output.resources[0].spec.settings.db.encryptionSecret | length > 0 or encryption_secret_info.resources is defined and encryption_secret_info.resources | length > 0 }}"

# Debug
# -----------------------------------------------------------------------------
- name: Debug Manage Encryption Secrets details
  debug:
    msg:
      - "Manage encryption secrets name ............................ {{ mas_app_settings_encryption_secret_name }}"
      - "Manage encryption secrets already exists? ................. {{ is_encryption_secret_existing }}"
      - "Override existing encryption secrets? ..................... {{ mas_app_settings_override_encryption_secrets_flag }}"

# if encryption secret exists and mas_app_settings_override_encryption_secrets_flag is True
# then first backup locally the existing encryption secret
# skip this entire block if the mas_app_settings_override_encryption_secrets_flag is False
- block:
    - name: "Lookup existing {{ mas_app_settings_encryption_secret_name }} secret"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        name: "{{ mas_app_settings_encryption_secret_name }}"
        namespace: "mas-{{ mas_instance_id }}-{{ mas_app_id }}"
      register: existing_encryption_secret_info

    - name: "Backup existing {{ mas_app_settings_encryption_secret_name }} secret"
      vars:
        data: "{{ existing_encryption_secret_info.resources[0] }}"
      kubernetes.core.k8s:
        state: present
        namespace: "mas-{{ mas_instance_id }}-{{ mas_app_id }}"
        definition: "{{ lookup('template', 'templates/manage/encryption-secrets-blank.yml.j2') | from_yaml }}"

    - name: "Delete existing {{ mas_app_settings_encryption_secret_name }} secret"
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Secret
        name: "{{ mas_app_settings_encryption_secret_name }}"
        namespace: "mas-{{ mas_instance_id }}-{{ mas_app_id }}"

    - debug:
        msg:
          - "Backup existing encryption secret '{{ mas_app_settings_encryption_secret_name }}' as '{{ mas_app_settings_encryption_secret_name }}-bkp-{{ ansible_date_time.iso8601_basic_short | lower }}' completed!"

  when:
    - is_encryption_secret_existing
    - mas_app_settings_override_encryption_secrets_flag

# then, finally create the encryption secret if does not exist
# or create the new replacing secret with the new credentials if mas_app_settings_override_encryption_secrets_flag is True
- name: "Create secret containing {{ mas_app_id }} database encryption keys"
  no_log: true
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/manage/encryption-secrets.yml.j2') }}"
  when: not is_encryption_secret_existing or mas_app_settings_override_encryption_secrets_flag
