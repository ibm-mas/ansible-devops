---
mas_app_ws_fqn: manageworkspaces.apps.mas.ibm.com
mas_app_ws_apiversion: apps.mas.ibm.com/v1
mas_app_ws_kind: ManageWorkspace

# Depending on the number of components being used the time to configure Manage can grow significantly
mas_app_cfg_delay: "{{ lookup('env', 'MAS_APP_CFG_DELAY') | default(360, true)}}" # ~6 minutes
mas_app_cfg_retries: "{{ lookup('env', 'MAS_APP_CFG_RETRIES') | default(60, true)}}" # ~6 hours

mas_app_settings_aio_flag: "{{ lookup('env', 'MAS_APP_SETTINGS_AIO_FLAG') | default('true', true) | bool }}"
mas_app_settings_db2_schema: "{{ lookup('env', 'MAS_APP_SETTINGS_DB2_SCHEMA') | default('maximo', true)}}"
mas_app_settings_db_schema: "{{ lookup('env', 'MAS_APP_SETTINGS_DB_SCHEMA') | default(mas_app_settings_db2_schema, true)}}"
mas_app_settings_demodata: "{{ lookup('env', 'MAS_APP_SETTINGS_DEMODATA') | default('false', true) | bool }}"
mas_app_settings_db2vargraphic: "{{ lookup('env', 'MAS_APP_SETTINGS_DB2VARGRAPHIC') | default('true', true) | bool }}"

mas_app_settings_tablespace: "{{ lookup('env', 'MAS_APP_SETTINGS_TABLESPACE') | default('MAXDATA', true)}}"
mas_app_settings_indexspace: "{{ lookup('env', 'MAS_APP_SETTINGS_INDEXSPACE') | default('MAXINDEX', true)}}"

# if mas_app_settings_persistent_volumes_flag is 'true' then it will configure persistent storage for attachments and bim
# otherwise no persistent storage will be configured at all
mas_app_settings_persistent_volumes_flag: "{{ lookup('env', 'MAS_APP_SETTINGS_PERSISTENT_VOLUMES_FLAG') | default(False, true) | bool }}"
mas_app_settings_persistent_volumes_default_accessmode: "ReadWriteMany"

# properties to configure persistent volumes for doclinks i.e attachments
mas_app_settings_doclinks_pvc_storage_class: "{{ lookup('env', 'MAS_APP_SETTINGS_DOCLINKS_PVC_STORAGE_CLASS') }}" # if not defined by user, it will be automatically defined while setting persistent storage
mas_app_settings_doclinks_pvc_accessmode: "{{ lookup('env', 'MAS_APP_SETTINGS_DOCLINKS_PVC_ACCESSMODE') | default(mas_app_settings_persistent_volumes_default_accessmode, true) }}"
mas_app_settings_doclinks_pvc_name: "{{ lookup('env', 'MAS_APP_SETTINGS_DOCLINKS_PVC_NAME') | default('manage-doclinks', true) }}"
mas_app_settings_doclinks_pvc_size: "{{ lookup('env', 'MAS_APP_SETTINGS_DOCLINKS_PVC_SIZE') | default('20Gi', true) }}"
mas_app_settings_doclinks_mount_path: "{{ lookup('env', 'MAS_APP_SETTINGS_DOCLINKS_MOUNT_PATH') | default('/DOCLINKS', true) }}"

# properties to configure persistent volumes for Building Information Modeling (i.e BIM)
# the values defined here will be used to create 3 separate PVCs with the same size each:
# - bim/models
# - bim/docs
# - bim/import
mas_app_settings_bim_pvc_storage_class: "{{ lookup('env', 'MAS_APP_SETTINGS_BIM_PVC_STORAGE_CLASS') }}" # if not defined by user, it will be automatically defined while setting persistent storage
mas_app_settings_bim_pvc_accessmode: "{{ lookup('env', 'MAS_APP_SETTINGS_BIM_PVC_ACCESSMODE') | default(mas_app_settings_persistent_volumes_default_accessmode, true) }}"
mas_app_settings_bim_pvc_name: "{{ lookup('env', 'MAS_APP_SETTINGS_BIM_PVC_NAME') | default('manage-bim', true) }}"
mas_app_settings_bim_pvc_size: "{{ lookup('env', 'MAS_APP_SETTINGS_BIM_PVC_SIZE') | default('20Gi', true) }}"
mas_app_settings_bim_mount_path: "{{ lookup('env', 'MAS_APP_SETTINGS_BIM_MOUNT_PATH') | default('/bim', true) }}"

# properties to configure persistent volumes for JMS queues, the below will only be set if 'mas_app_settings_server_bundles_size' = 'jms'
mas_app_settings_jms_queue_pvc_storage_class: "{{ lookup('env', 'MAS_APP_SETTINGS_JMS_QUEUE_PVC_STORAGE_CLASS') }}" # if not defined by user, it will be automatically defined while setting persistent storage
mas_app_settings_jms_queue_pvc_accessmode: "{{ lookup('env', 'MAS_APP_SETTINGS_JMS_QUEUE_PVC_ACCESSMODE') | default(mas_app_settings_persistent_volumes_default_accessmode, true) }}"
mas_app_settings_jms_queue_pvc_name: "{{ lookup('env', 'MAS_APP_SETTINGS_JMS_QUEUE_PVC_NAME') | default('manage-jms', true) }}"
mas_app_settings_jms_queue_pvc_size: "{{ lookup('env', 'MAS_APP_SETTINGS_JMS_QUEUE_PVC_SIZE') | default('20Gi', true) }}"
mas_app_settings_jms_queue_mount_path: "{{ lookup('env', 'MAS_APP_SETTINGS_JMS_QUEUE_MOUNT_PATH') | default('/jms', true) }}"

mas_app_settings_persistent_volumes_default:
  - accessModes:
      - "{{ mas_app_settings_doclinks_pvc_accessmode }}"
    mountPath: "{{ mas_app_settings_doclinks_mount_path }}"
    pvcName: "{{ mas_app_settings_doclinks_pvc_name }}"
    size: "{{ mas_app_settings_doclinks_pvc_size }}"
    storageClassName: "{{ mas_app_settings_doclinks_pvc_storage_class }}"
  - accessModes:
      - "{{ mas_app_settings_bim_pvc_accessmode }}"
    mountPath: "{{ mas_app_settings_bim_mount_path }}"
    pvcName: "{{ mas_app_settings_bim_pvc_name }}"
    size: "{{ mas_app_settings_bim_pvc_size }}"
    storageClassName: "{{ mas_app_settings_bim_pvc_storage_class }}"

mas_app_settings_persistent_volumes: "{{ mas_app_settings_persistent_volumes_default if (mas_app_settings_persistent_volumes_flag) else [] }}"

# property to configure server timezone
mas_app_settings_server_timezone: "{{ lookup('env', 'MAS_APP_SETTINGS_SERVER_TIMEZONE') | default('GMT', true) }}"

# properties to configure supported languages
mas_app_settings_base_lang: "{{ lookup('env', 'MAS_APP_SETTINGS_BASE_LANG') | default('EN', true) }}"
mas_app_settings_secondary_langs: "{{ lookup('env', 'MAS_APP_SETTINGS_SECONDARY_LANGS') | default([], true) }}"

# property to confifure jms queues
mas_app_settings_default_jms: "{{ lookup('env', 'MAS_APP_SETTINGS_DEFAULT_JMS') | default('false', true) | bool }}"

# properties to configure bundle servers
server_bundle_jms_internal_endpoint: "{{ mas_instance_id }}-{{ mas_workspace_id }}-jms.mas-{{ mas_instance_id }}-manage.svc:7276" # maspreivt89-main-jms.mas-maspreivt89-manage.svc:7276

# these settings will be applied to ui, cron and report - these server bundles don't need the activation specification in the JMS config xml
server_bundles_add_server_config_no_activation_content: "{{ lookup('file', '{{ role_path }}/files/manage/manage-additional-server-config-no-activation.xml.j2') }}"

# this setting will be applied to mea - this server bundles will need the activation specification in the JMS config xml
server_bundles_add_server_config_content: "{{ lookup('file', '{{ role_path }}/files/manage/manage-additional-server-config.xml.j2') }}"

# this setting will be applied to jms - this server bundle will have special config for JMS queues in the xml
server_bundles_jms_add_server_config_content: "{{ lookup('file', '{{ role_path }}/files/manage/manage-jms-additional-server-config.xml.j2') }}"

# these settings will define the bundle servers spec
mas_app_settings_server_bundles_size: "{{ lookup('env', 'MAS_APP_SETTINGS_SERVER_BUNDLES_SIZE') | default('dev', true)  }}"
mas_app_settings_server_bundles:
  dev:
    serverBundleEarFilename: maximo-all
    serverBundles:
      - bundleType: all
        isDefault: true
        isMobileTarget: true
        isUserSyncTarget: true
        name: all
        replica: 1
        routeSubDomain: all
  small:
    serverBundleEarFilename: maximomea
    serverBundles:
      - bundleType: ui
        isDefault: true
        isMobileTarget: true
        isUserSyncTarget: false
        name: ui
        replica: 1
        routeSubDomain: ui
      - bundleType: mea
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: true
        name: mea
        replica: 1
        routeSubDomain: mea
      - bundleType: report
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: false
        name: rpt
        replica: 1
        routeSubDomain: rpt
      - bundleType: cron
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: false
        name: cron
        replica: 1
        routeSubDomain: cron
  jms:
    serverBundleEarFilename: maximomea
    serverBundles:
      - additionalServerConfig:
          secretName: "{{ mas_workspace_id }}-{{ mas_app_id }}-d--sb0--asc--sn" # this will store content from 'server_bundles_add_server_config_no_activation_content'
        bundleType: ui
        isDefault: true
        isMobileTarget: true
        isUserSyncTarget: false
        name: ui
        replica: 1
        routeSubDomain: ui
      - additionalServerConfig:
          secretName: "{{ mas_workspace_id }}-{{ mas_app_id }}-d--sb1--asc--sn" # this will store content from 'server_bundles_add_server_config
        bundleType: mea
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: true
        name: mea
        replica: 1
        routeSubDomain: mea
      - additionalServerConfig:
          secretName: "{{ mas_workspace_id }}-{{ mas_app_id }}-d--sb2--asc--sn" # this will store content from 'server_bundles_add_server_config_no_activation_content'
        bundleType: report
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: false
        name: rpt
        replica: 1
        routeSubDomain: rpt
      - additionalServerConfig:
          secretName: "{{ mas_workspace_id }}-{{ mas_app_id }}-d--sb3--asc--sn" # this will store content from 'server_bundles_add_server_config_no_activation_content'
        bundleType: cron
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: false
        name: cron
        replica: 1
        routeSubDomain: cron
      - additionalServerConfig:
          secretName: "{{ mas_workspace_id }}-{{ mas_app_id }}-d--sb4--asc--sn" # this will store content from 'server_bundles_jms_add_server_config_content'
        bundleType: standalonejms
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: false
        name: jms
        replica: 1
        routeSubDomain: jms
  snojms:
    serverBundleEarFilename: maximo-all
    serverBundles:
      - additionalServerConfig:
          secretName: "{{ mas_workspace_id }}-{{ mas_app_id }}-d--sb0--asc--sn" # this will store content from 'server_bundles_add_server_config_content'
        bundleType: all
        isDefault: true
        isMobileTarget: true
        isUserSyncTarget: true
        name: all
        replica: 1
        routeSubDomain: all
      - additionalServerConfig:
          secretName: "{{ mas_workspace_id }}-{{ mas_app_id }}-d--sb1--asc--sn" # this will store content from 'server_bundles_jms_add_server_config_content'
        bundleType: standalonejms
        isDefault: false
        isMobileTarget: false
        isUserSyncTarget: false
        name: jms
        replica: 1
        routeSubDomain: jms

# these settings will define the customization archive
mas_app_settings_customization_archive_url: "{{ lookup('env', 'MAS_APP_SETTINGS_CUSTOMIZATION_ARCHIVE_URL') }}"
mas_app_settings_customization_archive_name: "{{ lookup('env', 'MAS_APP_SETTINGS_CUSTOMIZATION_ARCHIVE_NAME') | default('manage-custom-archive', true) }}"
mas_app_settings_customization_archive_username: "{{ lookup('env', 'MAS_APP_SETTINGS_CUSTOMIZATION_ARCHIVE_USERNAME') }}"
mas_app_settings_customization_archive_password: "{{ lookup('env', 'MAS_APP_SETTINGS_CUSTOMIZATION_ARCHIVE_PASSWORD') }}"

mas_app_settings_customization_list:
  - customizationArchiveName: "{{ mas_app_settings_customization_archive_name }}"
    customizationArchiveUrl: "{{ mas_app_settings_customization_archive_url }}"

mas_app_settings_customization_credentials_secret_name: "{{ mas_workspace_id }}-{{ mas_app_id }}-cl0--cac--sn"
mas_app_settings_customization_credentials:
  customizationArchiveCredentials:
    secretName: "{{ mas_app_settings_customization_credentials_secret_name }}"

# these settings will define the manage db encryption secrets
mas_app_settings_crypto_key: "{{ lookup('env', 'MAS_APP_SETTINGS_CRYPTO_KEY') }}"
mas_app_settings_cryptox_key: "{{ lookup('env', 'MAS_APP_SETTINGS_CRYPTOX_KEY') }}"
mas_app_settings_old_crypto_key: "{{ lookup('env', 'MAS_APP_SETTINGS_OLD_CRYPTO_KEY') }}"
mas_app_settings_old_cryptox_key: "{{ lookup('env', 'MAS_APP_SETTINGS_OLD_CRYPTOX_KEY') }}"
mas_app_settings_override_encryption_secrets_flag: "{{ lookup('env', 'MAS_APP_SETTINGS_OVERRIDE_ENCRYPTION_SECRETS_FLAG') | default('False', true) | bool }}"
mas_app_settings_encryption_default_secret_name: "{{ mas_workspace_id }}-{{ mas_app_id }}-encryptionsecret"

# -------------------
# Manage/Health Bindings
# -------------------

mas_appws_bindings_health_wsl_flag: "{{ lookup('env', 'MAS_APPWS_BINDINGS_HEALTH_WSL_FLAG') | default('false', true) | bool }}"

# Bindins will be like this
mas_app_bindings_jdbc:
  jdbc: "{{ mas_appws_bindings_jdbc | default( 'system' , true) }}"
# ... or this, depending on
mas_app_bindings_jdbc_wsl:
  jdbc: "{{ mas_appws_bindings_jdbc | default( 'system' , true) }}"
  watsonstudio: system # cp4d_service role creates WatsonStudioCfg as system, no other option today

mas_app_bindings: "{{ mas_app_bindings_jdbc_wsl if mas_appws_bindings_health_wsl_flag else mas_app_bindings_jdbc }}"


manage_workspace_default_podTemplates_containers: ['monitoragent', 'manage-maxinst']
# -------------------
