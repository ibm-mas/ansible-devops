# 1. Get the pod name of the local LDAP service
# -----------------------------------------------------------------------------
- name: "Lookup db2 ldap Pod in {{ db2_namespace }} namespace"
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ db2_namespace }}"
    label_selectors:
      - app={{ db2_instance_name | lower}}
      - role=ldap
  register: db2_ldap_pod

- name: Set facts for LDAP pod name
  set_fact:
    db2_ldap_pod_name: "{{ db2_ldap_pod.resources[0].metadata.name }}"

- name: "Lookup db2 instance Pod in {{ db2_namespace }} namespace"
  kubernetes.core.k8s_info:
    kind: Pod
    name: "c-{{ db2_instance_name | lower}}-db2u-0"
    namespace: "{{ db2_namespace }}"
  register: db2_manage_pod
  until:
    - db2_manage_pod.resources | json_query('[*].status.conditions[?type==`ContainersReady`][].status') | select ('match','True') | list | length == 1
  failed_when:
    - db2_manage_pod.resources is not defined
    - db2_manage_pod.resources | length = 0

- name: Set facts for pod name
  set_fact:
    db2_manage_pod_name: "{{ db2_manage_pod.resources[0].metadata.name }}"

# 2. Check if user exist
# -----------------------------------------------------------------------------
- name: "check if user already exists"
  ignore_errors: true
  shell: |
    oc exec -it {{ db2_manage_pod_name }} -n {{ db2_namespace }} -c db2u -- su -lc "id {{ db2_ldap_username }}"
  register: check_ldap_user

# 3. Create LDAP user if it does not exist
# -----------------------------------------------------------------------------
- name: "Creating db2 user in local LDAP registry"
  shell: |
    oc exec -it -n {{ db2_namespace }} {{ db2_ldap_pod_name }} -- /opt/ibm/ldap_scripts/addLdapUser.py -u {{ db2_ldap_username }} -r admin -p {{ db2_ldap_password }}
  register: creating_ldap_user_output
  when: check_ldap_user.rc != 0

# 4. Test that the newly created user can connect to db2
# -----------------------------------------------------------------------------
- name: "Test that the newly created user can connect to db2"
  shell: |
    oc exec -it {{ db2_manage_pod_name }} -n {{ db2_namespace }} -c db2u -- su -lc "db2 connect to {{ db2_dbname }} user {{ db2_ldap_username }} using {{ db2_ldap_password }}" db2inst1
  register: db2_connect_result
  retries: 20
  delay: 20 # seconds
  until: db2_connect_result.rc == 0
