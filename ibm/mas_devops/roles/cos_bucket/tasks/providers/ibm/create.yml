---
# cos_apikey is required in order to be able to lookup cos resources
- name: "Fail if cos_apikey is not provided"
  assert:
    that: cos_apikey is defined and cos_apikey != ""
    fail_msg: "cos_apikey property is required"

# cos_instance_name is required in order to be able to create cos resources i.e credentials and buckets
- name: "Fail if cos_instance_name is not provided"
  assert:
    that: cos_instance_name is defined and cos_instance_name != ""
    fail_msg: "cos_instance_name property is required"

- name: "Fail if cos_bucket_region_location_type is not supported"
  assert:
    that: cos_bucket_region_location_type is defined and cos_bucket_region_location_type in ["region_location","cross_region_location"]
    fail_msg: "cos_bucket_region_location_type property must be set of one of these values: ['region_location','cross_region_location']"

- name: "Fail if cross_region_location is not supported"
  when: cos_bucket_region_location_type == 'cross_region_location'
  assert:
    that: cos_bucket_region_location is defined and cos_bucket_region_location in supported_cross_region_location
    fail_msg: "cos_bucket_region_location property was set to '{{ cos_bucket_region_location }}' but must be set of one of the supported 'cross_region_location' values: {{ supported_cross_region_location }}"

- name: "Fail if region_location is not supported"
  when: cos_bucket_region_location_type == 'region_location'
  assert:
    that: cos_bucket_region_location is defined and cos_bucket_region_location in supported_region_location
    fail_msg: "cos_bucket_region_location property was set to '{{ cos_bucket_region_location }}' but must be set of one of the supported 'region_location' values: {{ supported_region_location }}"

# 1. Determine the instance name
# ---------------------------------------------------------------------------------------------------------------------
- name: "Create IBM COS Bucket: Debug general info"
  debug:
    msg:
      - "IBM Cloud Resource Group ........... {{ ibmcloud_resourcegroup }}"
      - "IBM COS url ........................ {{ cos_url }}"
      - "IBM COS instance name .............. {{ cos_instance_name }}"
      - "IBM COS location info .............. {{ cos_location_info }}"
      - "IBM COS bucket name ................ {{ cos_bucket_name }}"
      - "IBM COS bucket storage class........ {{ cos_bucket_storage_class }}"
      - "IBM COS region location type ....... {{ cos_bucket_region_location_type }}"
      - "IBM COS bucket location ............ {{ cos_bucket_region_location }}"
      - "IBM COS service credentials name ... {{ cos_service_credentials_name }}"
      - "IBM COS service credentials role ... {{ cos_resource_key_iam_role }}"
      - "Expire Rule Enabled? ............... {{ cos_bucket_expire_rule_enable_flag }}"
      - "Expire Rule Id ..................... {{ cos_bucket_expire_rule_id }}"
      - "Expire Rule in Days ................ {{ cos_bucket_expire_rule_days }}"
      - "Enable object versioning ........... {{ cos_bucket_versioning_flag }}"

# 2. Lookup IBM Cloud Resource Group GUID
# ---------------------------------------------------------------------------------------------------------------------
- name: "ibm : Retrieve resource group guid"
  ibm.cloudcollection.ibm_resource_group_info:
    name: "{{ ibmcloud_resourcegroup }}"
    ibmcloud_api_key: "{{ cos_apikey }}"
  register: rg_info

- name: "ibm : Debug group GUID"
  debug:
    msg:
      - "Resource Group GUID ... {{ rg_info.resource.id }}"

- name: "ibm : Set resource group guid variable"
  when:
    - rg_info.resource.id is defined
  set_fact:
    resourceGID: "{{ rg_info.resource.id }}"

# 3. Retrieve COS instance
# ---------------------------------------------------------------------------------------------------------------------
- name: "Retrieve IBM COS instance ID"
  ibm.cloudcollection.ibm_resource_instance_info:
    name: "{{ cos_instance_name }}"
    resource_group_id: "{{ resourceGID }}"
    service: "{{ cos_service }}"
    location: "{{ cos_location_info }}"
    ibmcloud_api_key: "{{ cos_apikey  }}"
  register: cos_info

- name: "Debug IBM COS resource ID"
  debug:
    msg: "COS Instance resource ID ... {{ cos_info.resource.id }}"

- name: "Set resource instance id variable"
  when: cos_info.resource.id is defined
  set_fact:
    cos_resource_id: "{{ cos_info.resource.id }}"

# 4. Create authentication credentials for the instance
# ---------------------------------------------------------------------------------------------------------------------
- include_tasks: tasks/providers/ibm/create_service_credentials.yml

# # 5. Create COS bucket
# ---------------------------------------------------------------------------------------------------------------------
- include_tasks: tasks/providers/ibm/create_{{ cos_bucket_region_location_type }}_bucket.yml
