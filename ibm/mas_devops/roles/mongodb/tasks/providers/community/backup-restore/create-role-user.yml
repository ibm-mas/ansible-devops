---
- name: "Set fact: mongodb role and user"
  set_fact:
    mongodb_role: sysadmin
    mongodb_user: sysadmin


# Create mongodb role
# -----------------------------------------------------------------------------
- name: "Get mongodb role '{{ mongodb_role }}'"
  changed_when: false
  shell: >
    oc exec {{ mongodb_pod_name }} -c {{ mongodb_container_name }} -n {{ mongodb_namespace }} -- bash -c
    '{{ mongodb_shell }} --quiet --host={{ mongodb_primary_host }} --username=admin --password={{ mongodb_password }}
    --authenticationDatabase=admin --tls --tlsCAFile={{ mongodb_ca_file }} admin
    --eval="db.getRole( \"{{ mongodb_role }}\" )"'
  register: _mongodb_get_role_output
  no_log: true

- name: "Debug: get mongodb role result"
  debug:
    msg: "Get mongodb role result ............... {{ _mongodb_get_role_output.stdout_lines }}"

- name: "Create mongodb role '{{ mongodb_role }}'"
  when: _mongodb_get_role_output.stdout_lines[-1] == "null"
  block:
    - name: "Create mongodb role '{{ mongodb_role }}'"
      changed_when: true
      shell: >
        oc exec {{ mongodb_pod_name }} -c {{ mongodb_container_name }} -n {{ mongodb_namespace }} -- bash -c
        '{{ mongodb_shell }} --quiet --host={{ mongodb_primary_host }} --username=admin --password={{ mongodb_password }}
        --authenticationDatabase=admin --tls --tlsCAFile={{ mongodb_ca_file }} admin
        --eval="db.createRole({ role: \"{{ mongodb_role }}\", roles: [], privileges: [{ resource: {anyResource: true}, actions: [\"anyAction\"] }]})"'
      register: _mongodb_create_role_output
      no_log: true

    - name: "Debug: create mongodb role result"
      debug:
        msg: "Create mongodb role result ........ {{ _mongodb_create_role_output.stdout_lines }}"


# Create mongodb user
# -----------------------------------------------------------------------------
- name: "Get mongodb user '{{ mongodb_user }}'"
  changed_when: false
  shell: >
    oc exec {{ mongodb_pod_name }} -c {{ mongodb_container_name }} -n {{ mongodb_namespace }} -- bash -c
    '{{ mongodb_shell }} --quiet --host={{ mongodb_primary_host }} --username=admin --password={{ mongodb_password }}
    --authenticationDatabase=admin --tls --tlsCAFile={{ mongodb_ca_file }} admin
    --eval="db.getUser( \"{{ mongodb_user }}\" )"'
  register: _mongodb_get_user_output
  no_log: true

- name: "Create mongodb user '{{ mongodb_user }}'"
  when: _mongodb_get_user_output.stdout_lines[-1] == "null"
  block:
    - name: "Create mongodb user '{{ mongodb_user }}'"
      changed_when: true
      shell: >
        oc exec {{ mongodb_pod_name }} -c {{ mongodb_container_name }} -n {{ mongodb_namespace }} -- bash -c
        '{{ mongodb_shell }} --quiet --host={{ mongodb_primary_host }} --username=admin --password={{ mongodb_password }}
        --authenticationDatabase=admin --tls --tlsCAFile={{ mongodb_ca_file }} admin
        --eval="db.createUser({ user: \"{{ mongodb_user }}\", pwd: \"{{ mongodb_password }}\", roles: [ \"{{ mongodb_role }}\" ]})"'
      register: _mongodb_create_user_output
      no_log: true

    - name: "Debug: create mongodb user result"
      debug:
        msg: "Create mongodb user result ........ {{ _mongodb_create_user_output.stdout_lines }}"
