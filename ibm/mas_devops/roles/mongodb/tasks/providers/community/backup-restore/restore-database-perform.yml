---
# Input parameters:
#   _job_type
#   _job_name

# Copy backup file from specified storage location
# -------------------------------------------------------------------------
- name: "Copy backup file from specified storage location to pod"
  when: _mongodb_cf_in_server
  include_tasks: "{{ role_path }}/../../common_tasks/backup_restore/copy_storage_files_to_pod.yml"
  vars:
    masbr_cf_job_type: "backup"
    masbr_cf_job_name: "{{ _job_name }}"
    masbr_cf_paths:
      - src_file: "{{ masbr_job_data_type }}/{{ _job_name }}.tar.gz"
        dest_folder: "{{ mongodb_restore_folder }}"

- name: "Download and copy backup files to pod"
  when: not _mongodb_cf_in_server
  block:
    - name: "Download backup files from specified storage location to local"
      include_tasks: "{{ role_path }}/../../common_tasks/backup_restore/copy_storage_files_to_local.yml"
      vars:
        masbr_cf_job_type: "backup"
        masbr_cf_job_name: "{{ _job_name }}"
        masbr_cf_paths:
          - src_file: "{{ masbr_job_data_type }}/{{ _job_name }}.tar.gz"
            dest_folder: "{{ masbr_local_job_folder }}/{{ masbr_job_data_type }}"

    - name: "Copy backup files from local to pod"
      changed_when: true
      shell: >
        oc cp --retries=50 -c {{ mongodb_container_name }}
        {{ masbr_local_job_folder }}/{{ masbr_job_data_type }}/{{ _job_name }}.tar.gz
        {{ mongodb_namespace }}/{{ mongodb_pod_name }}:{{ mongodb_restore_folder }}


# Extract the tar.gz file
# -------------------------------------------------------------------------
- name: "Extract the tar.gz file"
  changed_when: true
  shell: >
    {{ exec_in_pod_begin }}
    mkdir -p {{ mongodb_restore_folder }}/{{ _job_name }} &&
    tar -xzf {{ mongodb_restore_folder }}/{{ _job_name }}.tar.gz
    -C {{ mongodb_restore_folder }}/{{ _job_name }} &&
    ls -lA {{ mongodb_restore_folder }}/{{ _job_name }}
    {{ exec_in_pod_end }}
  register: _extract_output

- name: "Debug: list extracted files"
  debug:
    msg:
      - "Extract output folder .............. {{ mongodb_restore_folder }}/{{ _job_name }}"
      - "{{ _extract_output.stdout_lines }}"


# Restore mongodb databases
# -------------------------------------------------------------------------
- name: "Set fact: mongodb ns instance"
  set_fact:
    mongodb_ns_instance: "{{ mas_instance_id }}"

- name: "Set fact: rename mongodb ns"
  when: masbr_restore_to_diff_instance
  set_fact:
    mongodb_ns_rename: >-
      --nsFrom="*_{{ masbr_restore_from_yaml.source.instance }}_*.*" --nsTo="*_{{ mas_instance_id }}_*.*"
    mongodb_ns_instance: "{{ masbr_restore_from_yaml.source.instance }}"

- name: "Set fact: mongodb ns filters (Only for restoring from Full backup)"
  when: _job_type == "full"
  set_fact:
    # Exclude these collections because they should be populated by MAS installation
    mongodb_ns_filter: >-
      --nsExclude="mas_{{ mongodb_ns_instance }}_adoptionusage.*"
      --nsExclude="mas_{{ mongodb_ns_instance }}_catalog.*"
      --nsExclude="mas_{{ mongodb_ns_instance }}_core.OauthClient"
      --nsExclude="mas_{{ mongodb_ns_instance }}_core.OauthToken"
      --nsExclude="mas_{{ mongodb_ns_instance }}_core.bindings"
      --nsExclude="mas_{{ mongodb_ns_instance }}_core.graphiteconfigtool.*"
      --nsExclude="mas_{{ mongodb_ns_instance }}_core.workspaces"

- name: "Debug: mongodb ns filters (Only for restoring from Full backup)"
  when: _job_type == "full"
  debug:
    msg: "{{ mongodb_ns_filter }}"

- name: "Restore mongodb databases"
  changed_when: true
  shell: >
    {{ exec_in_pod_begin }}
    mongorestore --host={{ mongodb_primary_host }}
    --username={{ mongodb_user }} --password={{ mongodb_password }}
    --authenticationDatabase=admin --ssl --sslCAFile={{ mongodb_ca_file }}
    {{ '--oplogReplay' if _job_type == 'incr' }}
    {{ mongodb_ns_filter if _job_type == 'full' }}
    {{ mongodb_ns_rename if masbr_restore_to_diff_instance }}
    --drop --dir={{ mongodb_restore_folder }}/{{ _job_name }}
    |& tee -a {{ mongodb_restore_log }}
    {{ exec_in_pod_end }}
  register: _mongorestore_output
  no_log: true

- name: "Debug: mongorestore output"
  debug:
    msg: "{{ _mongorestore_output.stdout_lines }}"


# Save restored database names
# -------------------------------------------------------------------------
- name: "Get restored database names"
  changed_when: false
  when: _job_type == "full"
  shell: >
    {{ exec_in_pod_begin }}
    ls {{ mongodb_restore_folder }}/{{ _job_name }}
    {{ exec_in_pod_end }}
  register: _ls_output

- name: "Set fact: restored database names"
  when: _job_type == "full"
  set_fact:
    mongodb_restored_db_names: "{{ _ls_output.stdout_lines }}"
