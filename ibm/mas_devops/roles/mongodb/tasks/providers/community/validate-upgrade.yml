---
- name: "community : install : Check if mongo exists"
  include_tasks: tasks/providers/community/check-mongo-exists.yml

- name: "community : validate-upgrade : debug"
  debug:
    msg:
      - "Minor mongo version ....................... {{ existing_mongo_minor_version }}"
      - "Existing MongoDb version .................. {{ existing_mongo_version }}"
      - "Compatible Target MongoDb version ......... {{ mongo_compatible_target_version[existing_mongo_version] }}"
      - "Target MongoDb version .................... {{ target_mongodb_version }}"

# Only allow Mongo upgrades if existing instance is in Running state
- name: "Assert existing Mongo is running"
  assert:
    that: existing_mongodb.resources[0].status.phase == 'Running'
    fail_msg:
      - "Unable to upgrade existing Mongo instance to {{ target_mongodb_version }} in namespace {{ mongodb_namespace }} because it is not in 'Running' state."
      - "Current Mongo Status: {{ existing_mongodb.resources[0].status.phase }}"

# Only allow Mongo upgrades, prevent downgrades from happening
- name: Assert no Mongo downgrade operations
  assert:
    that: "existing_mongo_version is version_compare(target_mongodb_version, '<=')"
    fail_msg: "Mongo downgrade is not allowed! Current mongo version: {{ existing_mongo_version }}, target mongo version {{ target_mongodb_version }}"

# For users installed or upgraded to mongo v4.4 using old CLI didn't have featureCompatibilityVersion set correctly.
- name: Assert featureCompatibilityVersion is present and equal to existing version.
  assert:
    that:
      - existing_mongodb.resources[0].spec.featureCompatibilityVersion is defined and existing_mongodb.resources[0].spec.featureCompatibilityVersion != ""
      - existing_mongodb.resources[0].spec.featureCompatibilityVersion == existing_mongo_minor_version
    fail_msg: "Mongo upgrade is not allowed due to either missing featureCompatibilityVersion field or wrong version in featureCompatibilityVersion field in MongoDBCommunity CR"
  when: mongodb_v5_upgrade or mongodb_v6_upgrade or mongodb_v7_upgrade


# Only allow Mongo upgrades to be next compatible minor version
- name: "Assert Mongo upgrade compatibility: {{ target_mongodb_version }} must be in {{ mongo_compatible_target_version[existing_mongo_version] }}"
  when: existing_mongo_minor_version != '4.2' # will skip this assertion if mongo v4.2 as we'll assist in the auto upgrade to v4.4 and v5 in a single run
  assert:
    that: target_mongodb_version in mongo_compatible_target_version[existing_mongo_version]
    fail_msg:
      - "You have an existing Mongo database instance that is running on version {{ existing_mongo_version }}, which cannot be directly upgraded to version {{ target_mongodb_version }}."
      - "In order to upgrade your current instance to {{ target_mongodb_version }}, you must first upgrade your Mongo instance version to one of the compatible options: {{ mongo_compatible_target_version[existing_mongo_version] }}."

# This would validate that we only upgrade to v5.0 if 'target_mongodb_version' matches v5.0 minor version and 'mongodb_v5_upgrade: true'
- name: "Assert that the Mongo v5 upgrade has been triggered"
  when:
    - existing_mongo_minor_version is version_compare('5.0', '<')
    - target_mongodb_version | regex_search('(?<=)(.*)(?=...)') == '5.0'
  assert:
    that: mongodb_v5_upgrade
    fail_msg: "Your current mongo version is {{ existing_mongo_version }}, in order to upgrade to version {{ target_mongodb_version }}, you must set 'mongodb_v5_upgrade': true"

# This would validate that we only upgrade to v6.0 if 'target_mongodb_version' matches v6.0 minor version and 'mongodb_v6_upgrade: true'
- name: "Assert that the Mongo v6 upgrade has been triggered"
  when:
    - existing_mongo_minor_version is version_compare('6.0', '<')
    - target_mongodb_version | regex_search('(?<=)(.*)(?=...)') == '6.0'
  assert:
    that: mongodb_v6_upgrade
    fail_msg: "Your current mongo version is {{ existing_mongo_version }}, in order to upgrade to version {{ target_mongodb_version }}, you must set 'mongodb_v6_upgrade': true"

# This would validate that we only upgrade to v7.0 if 'target_mongodb_version' matches v7.0 minor version and 'mongodb_v7_upgrade: true'
- name: "Assert that the Mongo v7 upgrade has been triggered"
  when:
    - existing_mongo_minor_version is version_compare('7.0', '<')
    - target_mongodb_version | regex_search('(?<=)(.*)(?=...)') == '7.0'
  assert:
    that: mongodb_v7_upgrade
    fail_msg: "Your current mongo version is {{ existing_mongo_version }}, in order to upgrade to version {{ target_mongodb_version }}, you must set 'mongodb_v7_upgrade': true"
