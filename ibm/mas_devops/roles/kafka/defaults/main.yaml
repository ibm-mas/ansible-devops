---
kafka_provider: "{{ lookup('env', 'KAFKA_PROVIDER') | default('strimzi', true) }}"
kafka_action: "{{ lookup('env', 'KAFKA_ACTION') | default('install', true) }}"

# vars for red hat amq or strimzi
amq_exists: false # initialize variable
kafka_defaults:
  strimzi:
    version: "4.1.0" # Supported versions for strimzi-cluster-operator.v0.48.0 are: ['4.0.0', '4.1.0']
    namespace: "strimzi"
    operator_name: "strimzi-kafka-operator"
    alias_name: "Strimzi"
  redhat:
    version: "4.0.0"
    namespace: "amq-streams"
    operator_name: "amq-streams"
    alias_name: "Red Hat AMQ Streams"
  aws:
    version: "3.3.1"

kafka_version: "{{ lookup('env', 'KAFKA_VERSION') | default(kafka_defaults[kafka_provider].version, true) }}"
kafka_namespace: "{{ lookup('env', 'KAFKA_NAMESPACE') | default(kafka_defaults[kafka_provider].namespace, true) }}"
kafka_operator_name: "{{ kafka_defaults[kafka_provider].operator_name }}"

kafka_cluster_name: "{{ lookup('env', 'KAFKA_CLUSTER_NAME') | default('maskafka', true)  }}"
kafka_cluster_size: "{{ lookup('env', 'KAFKA_CLUSTER_SIZE') | default('small', true)  }}"
kafka_storage_class: "{{ lookup('env', 'KAFKA_STORAGE_CLASS') }}"
kafka_storage_size: "{{ lookup('env', 'KAFKA_STORAGE_SIZE') | default('100Gi', true) }}"
zookeeper_storage_class: "{{ lookup('env', 'ZOOKEEPER_STORAGE_CLASS') }}"
zookeeper_storage_size: "{{ lookup('env', 'ZOOKEEPER_STORAGE_SIZE') | default('10Gi', true) }}"
kafka_user_name: "{{ lookup('env', 'KAFKA_USER_NAME') | default('masuser', true)  }}"
kafka_user_password: "{{ lookup('env', 'KAFKA_USER_PASSWORD') | default(lookup('ansible.builtin.password', '/dev/null chars=ascii_lowercase,digits length=16'), true)  }}"

# vars for ibmcloud
ibmcloud_apikey: "{{ lookup('env', 'IBMCLOUD_APIKEY') }}"
ibmcloud_region: "{{ lookup('env', 'IBMCLOUD_REGION') | default('us-east', True) }}"
ibmcloud_resourcegroup: "{{ lookup('env', 'IBMCLOUD_RESOURCEGROUP') | default('Default', True) }}"

# vars for eventstreams provision or deprovision
eventstreams_resourcegroup: "{{ lookup('env', 'EVENTSTREAMS_RESOURCEGROUP') | default(ibmcloud_resourcegroup, true) }}"
eventstreams_name: "{{ lookup('env', 'EVENTSTREAMS_NAME') }}"
eventstreams_plan: "{{ lookup('env', 'EVENTSTREAMS_PLAN') | default('standard', True) }}"
eventstreams_location: "{{ lookup('env', 'EVENTSTREAMS_LOCATION') | default(ibmcloud_region, True) }}"
eventstreams_service: "messagehub"
eventstreams_retention: "{{ lookup('env', 'EVENTSTREAMS_RETENTION') | default('1209600000', True) }}"
eventstreams_credentials_secret_name: "ibm-eventstreams-maskafka-credentials" # Set eventstreams configmap name and secret name
eventstreams_create_manage_jms_topics: "{{ lookup('env', 'EVENTSTREAMS_CREATE_MANAGE_JMS_TOPICS') | default('True', True) | bool }}"

# When these variables are defined we will create the KafkaCfg resource, if either is missing then the configuration will not be generated
mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

# Custom Labels
custom_labels: "{{ lookup('env', 'CUSTOM_LABELS') | default(None, true) | string | ibm.mas_devops.string2dict() }}"

# vars for AWS MSK
# mandatory parameters
aws_access_key_id: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
aws_secret_access_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
aws_region: "{{ lookup('env', 'AWS_REGION') }}"
vpc_id: "{{ lookup('env', 'VPC_ID') }}"
# cidr for subnets in 3 different availabilty zones
aws_msk_cidr_az1: "{{ lookup('env', 'AWS_MSK_CIDR_AZ1') }}"
aws_msk_cidr_az2: "{{ lookup('env', 'AWS_MSK_CIDR_AZ2') }}"
aws_msk_cidr_az3: "{{ lookup('env', 'AWS_MSK_CIDR_AZ3') }}"
# add ipv4 cidr of vpc so that all applications inside that vpc can talk to msk
aws_msk_ingress_cidr: "{{ lookup('env', 'AWS_MSK_INGRESS_CIDR') }}"
aws_msk_egress_cidr: "{{ lookup('env', 'AWS_MSK_EGRESS_CIDR') }}"
aws_kafka_user_name: "{{ lookup('env', 'AWS_KAFKA_USER_NAME') }}"

# optional parameters
aws_kafka_user_password: "{{ lookup('env', 'AWS_KAFKA_USER_PASSWORD') }}"
aws_msk_instance_type: "{{ lookup('env', 'AWS_MSK_INSTANCE_TYPE') | default('kafka.m5.large', true) }}"
aws_msk_volume_size: "{{ lookup('env', 'AWS_MSK_VOLUME_SIZE') | default('100', true) }}"
aws_msk_instance_number: "{{ lookup('env', 'AWS_MSK_INSTANCE_NUMBER') | default('3', True) }}"

aws_msk_security_group_name: "{{kafka_cluster_name}}-sg"
aws_msk_cluster_configuration: "{{kafka_cluster_name}}-cluster-config"
aws_msk_secret_name_default: "AmazonMSK_SECRET_{{ kafka_cluster_name }}"
aws_msk_secret: "{{ lookup('env', 'AWS_MSK_SECRET') | default(aws_msk_secret_name_default, True) }}"
aws_msk_kms_key: "{{kafka_cluster_name}}-kms-key"
