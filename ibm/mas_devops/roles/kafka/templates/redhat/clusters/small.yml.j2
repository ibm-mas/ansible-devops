apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: controller
  namespace: "{{ kafka_namespace }}"
  labels:
    strimzi.io/cluster: "{{ kafka_cluster_name }}"
spec:
  replicas: 3
  roles:
    - broker
    - controller
  storage:
    type: jbod
    volumes:
      - id: 0
        type: persistent-claim
        class: "{{ kafka_storage_class }}"
        size: "{{ kafka_storage_size }}"
        kraftMetadata: shared
        deleteClaim: true
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: "{{ kafka_cluster_name }}"
  namespace: "{{ kafka_namespace }}"
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  # -------------------------------------------------------
  kafka:
    version: "{{ kafka_version }}"
    resources:
      requests:
        memory: 4Gi
        cpu: "1"
      limits:
        memory: 4Gi
        cpu: "2"
    jvmOptions:
      -Xms: 3072m
      -Xmx: 3072m
    logging:
      type: external
      valueFrom:
        configMapKeyRef:
          name: kafka-logging-config
          key: kafka-log4j.properties
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics-config
          key: kafka-metrics-config.yml
    config:
      default.replication.factor: 3
      min.insync.replicas: 2
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      log.retention.hours: 24
      log.retention.bytes: 1073741824
      log.segment.bytes: 268435456
      log.cleaner.enable: true
      log.cleanup.policy: delete
      auto.create.topics.enable: false
      unclean.leader.election.enable: true
    authorization:
        type: simple
        superUsers:
          - admin
    listeners:
      - name: tls
        port: 9094
        type: route
        tls: true
        authentication:
          type: scram-sha-512
      - name: internal
        port: 9093
        type: internal
        tls: true
        authentication:
          type: scram-sha-512
        networkPolicyPeers:
          - namespaceSelector: {}
    template:
      pod:
        tmpDirSizeLimit: 100Mi
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                  - key: strimzi.io/name
                    operator: In
                    values:
                    - "{{ kafka_cluster_name }}-kafka"
  # -------------------------------------------------------
  # -------------------------------------------------------
  entityOperator:
    template:
      pod:
        tmpDirSizeLimit: 1024Mi
    userOperator:
      logging:
        type: inline
        loggers:
          rootLogger.level: INFO
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 512Mi
          cpu: 500m
    topicOperator:
      logging:
        type: inline
        loggers:
          rootLogger.level: INFO
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 512Mi
          cpu: 500m
  kafkaExporter:
    groupRegex: ".*"
    topicRegex: ".*"
    resources:
      requests:
        cpu: 200m
        memory: 64Mi
      limits:
        cpu: 500m
        memory: 128Mi
    logging: debug
    enableSaramaLogging: true
  # -------------------------------------------------------
  clusterCa:
    renewalDays: 30
    validityDays: 7200
    generateCertificateAuthority: true
