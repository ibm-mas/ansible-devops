---
- hosts: localhost
  any_errors_fatal: true

  vars:
    catalog_tag: "{{ lookup('env', 'MAS_CATALOG_VERSION') | default ('@@MAS_LATEST_CATALOG@@', True) }}"
    mirror_mode: "{{ lookup('env', 'MIRROR_MODE') | default ('direct', True) }}"

    # 1. Catalog
    # -------------------------------------------------------------------------
    mirror_catalog: "{{ lookup('env', 'MIRROR_CATALOG') | default ('True', True) | bool }}"

    # 2. MongoCE
    # -------------------------------------------------------------------------
    mirror_mongoce: "{{ lookup('env', 'MIRROR_MONGOCE') | default ('True', True) | bool }}"
    mirror_mongoce_v4: "{{ lookup('env', 'MIRROR_MONGOCE_V4') | default ('False', True) | bool }}"
    mirror_mongoce_v5: "{{ lookup('env', 'MIRROR_MONGOCE_V5') | default ('False', True) | bool }}"
    mirror_mongoce_v6: "{{ lookup('env', 'MIRROR_MONGOCE_V6') | default ('False', True) | bool }}"
    mirror_mongoce_v7: "{{ lookup('env', 'MIRROR_MONGOCE_V7') | default ('False', True) | bool }}"

    # 3. CPFS
    # -------------------------------------------------------------------------
    mirror_common_svcs: "{{ lookup('env', 'MIRROR_COMMONSERVICES') | default ('True', True) | bool }}"

    # 4. SLS
    # -------------------------------------------------------------------------
    mirror_sls: "{{ lookup('env', 'MIRROR_SLS') | default ('True', True) | bool }}"

    # 5. TSM
    # -------------------------------------------------------------------------
    mirror_tsm: "{{ lookup('env', 'MIRROR_TRUSTSTOREMGR') | default ('True', True) | bool }}"

    # 6. CP4D
    # -------------------------------------------------------------------------
    cpd_product_version: "{{ lookup('env', 'CPD_PRODUCT_VERSION') }}"
    mirror_cp4d: "{{ lookup('env', 'MIRROR_CP4D') | default ('False', True) | bool }}"
    cpd_48_or_higher: "{{ cpd_product_version is defined and cpd_product_version is version('4.8.0','>=') | bool }}"
    cpd_48: "{{ cpd_product_version is defined and cpd_product_version is version('4.8.0','==') | bool }}"

    # 7. Watson Studio Local
    # -------------------------------------------------------------------------
    mirror_wsl: "{{ lookup('env', 'MIRROR_WSL') | default ('False', True) | bool }}"

    # 8. Watson Machine Learning
    # -------------------------------------------------------------------------
    mirror_wml: "{{ lookup('env', 'MIRROR_WML') | default ('False', True) | bool }}"

    # 9. Analytics Engine (Spark)
    # -------------------------------------------------------------------------
    mirror_spark: "{{ lookup('env', 'MIRROR_SPARK') | default ('False', True) | bool }}"

    # 10. Db2u
    # -------------------------------------------------------------------------
    mirror_db2u: "{{ lookup('env', 'MIRROR_DB2U') | default ('False', True) | bool }}"

    # 11. Cognos Analytics
    # -------------------------------------------------------------------------
    mirror_cognos: "{{ lookup('env', 'MIRROR_COGNOS') | default ('False', True) | bool }}"

    # 12. App Connect
    # -------------------------------------------------------------------------
    mirror_appconnect: "{{ lookup('env', 'MIRROR_APPCONNECT') | default ('False', True) | bool }}"

    # 14. ODF
    # -------------------------------------------------------------------------
    mirror_odf: "{{ lookup('env', 'MIRROR_ODF') | default ('False', True) | bool }}"

  pre_tasks:
    - name: "Load Catalog Metadata"
      ibm.mas_devops.get_catalog_info:
        mas_catalog_version: "{{ catalog_tag }}"
      register: mas_catalog_metadata

    - name: "Check that the catalog is a know catalog"
      assert:
        that: mas_catalog_metadata.failed == false

  roles:
    # 1. IBM Maximo Operator Catalog
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_catalog
        - mirror_mode != "from-filesystem"
      vars:
        extras_name: catalog

    - role: ibm.mas_devops.mirror_images
      when: mirror_catalog
      vars:
        manifest_name: catalog
        manifest_version: "{{ catalog_tag }}"


    # 2. MongoDb Community Edition
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_mongoce
        - mirror_mode != "from-filesystem"
      vars:
        extras_name: mongoce
        extras_version: "{{ mas_catalog_metadata.mongo_extras_version }}"

    - role: ibm.mas_devops.mirror_images
      when: mirror_mongoce
      vars:
        manifest_name: extras_mongoce
        manifest_version: "{{ mas_catalog_metadata.mongo_extras_version }}"

    # Mirror Mongo v4 specifically when requested
    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_mode != "from-filesystem"
        - mirror_mongoce_v4
      vars:
        extras_name: mongoce
        extras_version: "{{ mas_catalog_metadata.mongo_extras_version_4 }}"

    - role: ibm.mas_devops.mirror_images
      when: mirror_mongoce_v4
      vars:
        manifest_name: extras_mongoce
        manifest_version: "{{ mas_catalog_metadata.mongo_extras_version_4 }}"

    # Mirror Mongo v5 specifically when requested
    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_mode != "from-filesystem"
        - mirror_mongoce_v5
      vars:
        extras_name: mongoce
        extras_version: "{{ mas_catalog_metadata.mongo_extras_version_5 }}"

    - role: ibm.mas_devops.mirror_images
      when: mirror_mongoce_v5
      vars:
        manifest_name: extras_mongoce
        manifest_version: "{{ mas_catalog_metadata.mongo_extras_version_5 }}"

    # Mirror Mongo v6 specifically when requested
    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_mode != "from-filesystem"
        - mirror_mongoce_v6
      vars:
        extras_name: mongoce
        extras_version: "{{ mas_catalog_metadata.mongo_extras_version_6 }}"

    - role: ibm.mas_devops.mirror_images
      when: mirror_mongoce_v6
      vars:
        manifest_name: extras_mongoce
        manifest_version: "{{ mas_catalog_metadata.mongo_extras_version_6 }}"


    # Mirror Mongo v7 specifically when requested
    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_mode != "from-filesystem"
        - mirror_mongoce_v7
      vars:
        extras_name: mongoce
        extras_version: "{{ mas_catalog_metadata.mongo_extras_version_7 }}"

    - role: ibm.mas_devops.mirror_images
      when: mirror_mongoce_v7
      vars:
        manifest_name: extras_mongoce
        manifest_version: "{{mas_catalog_metadata.mongo_extras_version_7 }}"

    # 3. IBM Cloud Pak Foundation Services
    # -------------------------------------------------------------------------
    # Just mirror IBM Cloud Pak Foundation Services images 'mirror_common_svcs' is set, or if CPD 4.8+ is being mirrored
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_common_svcs or (cpd_48_or_higher and mirror_cp4d)
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-cp-common-services
        case_version: "{{ mas_catalog_metadata.common_svcs_version }}"
        exclude_images:
          - ibm-auditlogging
          - ibm-cpp
          - ibm-cs-healthcheck
          - ibm-cs-monitoring
          - ibm-events-operator
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_common_svcs or (cpd_48_or_higher and mirror_cp4d)
      vars:
        manifest_name: ibm-cp-common-services
        manifest_version: "{{ mas_catalog_metadata.common_svcs_version }}"

    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_cp4d
        - mas_catalog_metadata.ibm_zen_version is defined
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-zen
        case_version: "{{ mas_catalog_metadata.ibm_zen_version }}"
        exclude_images:
          - ibm-auditlogging
          - ibm-cpp
          - ibm-cs-healthcheck
          - ibm-cs-monitoring
          - ibm-events-operator
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when:
        - mirror_cp4d
        - mas_catalog_metadata.ibm_zen_version is defined
      vars:
        manifest_name: ibm-zen
        manifest_version: "{{ mas_catalog_metadata.ibm_zen_version }}"

    # Mirroring another version for Cloud Pak Foundation Services
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_common_svcs
        - mirror_mode != "from-filesystem"
        - mas_catalog_metadata.common_svcs_version_1 is defined
        - mas_catalog_metadata.common_svcs_version_1 != ""
      vars:
        case_name: ibm-cp-common-services
        case_version: "{{ mas_catalog_metadata.common_svcs_version_1 }}"
        exclude_images:
          - ibm-auditlogging
          - ibm-cpp
          - ibm-cs-healthcheck
          - ibm-cs-monitoring
          - ibm-events-operator
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when:
        - mirror_common_svcs
        - mas_catalog_metadata.common_svcs_version_1 is defined
        - mas_catalog_metadata.common_svcs_version_1 != ""
      vars:
        manifest_name: ibm-cp-common-services
        manifest_version: "{{ mas_catalog_metadata.common_svcs_version_1 }}"


    # 4. IBM Suite License Service
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_sls
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-sls
        case_version: "{{ lookup('env', 'SLS_VERSION') | default (mas_catalog_metadata.sls_version, True) }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_sls
      vars:
        manifest_name: ibm-sls
        manifest_version: "{{ lookup('env', 'SLS_VERSION') | default (mas_catalog_metadata.sls_version, True) }}"


    # 5. IBM Truststore Manager
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_tsm
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-truststore-mgr
        case_version: "{{ lookup('env', 'TSM_VERSION') | default (mas_catalog_metadata.tsm_version, True) }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_tsm
      vars:
        manifest_name: ibm-truststore-mgr
        manifest_version: "{{ lookup('env', 'TSM_VERSION') | default (mas_catalog_metadata.tsm_version, True) }}"


    # 6.1 CP4D Platform
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_cp4d
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-cp-datacore
        case_version: "{{ mas_catalog_metadata.cp4d_platform_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: true

    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_cp4d
        - cpd_48
        - mirror_mode != "from-filesystem"
      vars:
        extras_name: cp4d
        extras_version: "4.8.0"

    - role: ibm.mas_devops.mirror_images
      when:
        - mirror_cp4d
        - cpd_48
      vars:
        manifest_name: extras_cp4d
        manifest_version: "4.8.0"

    - role: ibm.mas_devops.mirror_images
      when: mirror_cp4d
      vars:
        manifest_name: ibm-cp-datacore
        manifest_version: "{{ mas_catalog_metadata.cp4d_platform_version }}"

    # 6.2 CP4D Platform - IBM Licensing dependency
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - cpd_48_or_higher
        - mirror_cp4d
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-licensing
        case_version: "{{ mas_catalog_metadata.ibm_licensing_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: true

    - role: ibm.mas_devops.mirror_images
      when:
        - cpd_48_or_higher
        - mirror_cp4d
        - mirror_mode != "from-filesystem"
      vars:
        manifest_name: ibm-licensing
        manifest_version: "{{ mas_catalog_metadata.ibm_licensing_version }}"


    # 6.3 IBM Watson Studio and Watson Machine Learning dependency - ibm-ccs
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl or mirror_wml
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-ccs
        case_version: "{{ mas_catalog_metadata.wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_wsl or mirror_wml
      vars:
        manifest_name: ibm-ccs
        manifest_version: "{{ mas_catalog_metadata.wsl_version }}"


    # 7.1 IBM Watson Studio dependency - ibm-datarefinery
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-datarefinery
        case_version: "{{ mas_catalog_metadata.wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_wsl
      vars:
        manifest_name: ibm-datarefinery
        manifest_version: "{{ mas_catalog_metadata.wsl_version }}"

    # 7.2 IBM Watson Studio dependency - ibm-wsl-runtimes
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-wsl-runtimes
        case_version: "{{ mas_catalog_metadata.wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_wsl
      vars:
        manifest_name: ibm-wsl-runtimes
        manifest_version: "{{ mas_catalog_metadata.wsl_version }}"

    # 7.3 IBM Watson Studio dependency - ibm-elasticsearch-operator
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-elasticsearch-operator
        case_version: "{{ mas_catalog_metadata.elasticsearch_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_wsl
      vars:
        manifest_name: ibm-elasticsearch-operator
        manifest_version: "{{ mas_catalog_metadata.elasticsearch_version }}"

    # 7.4 IBM Watson Studio
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wsl
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-wsl
        case_version: "{{ mas_catalog_metadata.wsl_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: true

    - role: ibm.mas_devops.mirror_images
      when: mirror_wsl
      vars:
        manifest_name: ibm-wsl
        manifest_version: "{{ mas_catalog_metadata.wsl_version }}"


    # 8. IBM Watson Machine Learning
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_wml
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-wml-cpd
        case_version: "{{ mas_catalog_metadata.wml_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: true

    - role: ibm.mas_devops.mirror_images
      when: mirror_wml
      vars:
        manifest_name: ibm-wml-cpd
        manifest_version: "{{ mas_catalog_metadata.wml_version }}"


    # 9. Analytics Engine (Spark)
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_spark
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-analyticsengine
        case_version: "{{ mas_catalog_metadata.spark_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_spark
      vars:
        manifest_name: ibm-analyticsengine
        manifest_version: "{{ mas_catalog_metadata.spark_version }}"


    # 10. IBM Db2u
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_db2u
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-db2uoperator
        case_version: "{{ mas_catalog_metadata.db2u_version }}"
        exclude_images: []

    - role: ibm.mas_devops.mirror_images
      when: mirror_db2u
      vars:
        manifest_name: "ibm-db2uoperator"
        manifest_version: "{{ mas_catalog_metadata.db2u_version }}"
        mirror_single_arch: amd64

    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_db2u
        - mirror_mode != "from-filesystem"
      vars:
        extras_name: db2u
        extras_version: "{{ mas_catalog_metadata.db2u_extras_version }}"

    - role: ibm.mas_devops.mirror_images
      when: mirror_db2u
      vars:
        manifest_name: extras_db2u
        manifest_version: "{{ mas_catalog_metadata.db2u_extras_version }}"


    # 11. Cognos Analytics
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_cognos
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-cognos-analytics-prod
        case_version: "{{ mas_catalog_metadata.cognos_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_cognos
      vars:
        manifest_name: ibm-cognos-analytics-prod
        manifest_version: "{{ mas_catalog_metadata.cognos_version }}"


    # 12. App Connect
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_case_prepare
      when:
        - mirror_appconnect
        - mirror_mode != "from-filesystem"
      vars:
        case_name: ibm-appconnect
        case_version: "{{ mas_catalog_metadata.appconnect_version }}"
        exclude_images: []
        ibmpak_skip_dependencies: false

    - role: ibm.mas_devops.mirror_images
      when: mirror_appconnect
      vars:
        manifest_name: ibm-appconnect
        manifest_version: "{{ mas_catalog_metadata.appconnect_version }}"


    # 13. ODF - some extras needed
    # -------------------------------------------------------------------------
    - role: ibm.mas_devops.mirror_extras_prepare
      when:
        - mirror_odf
        - mirror_mode != "from-filesystem"
      vars:
        extras_name: odf
        extras_version: 4.15
